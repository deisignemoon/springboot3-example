[
  {
    "name": "ch.qos.logback.classic.encoder.PatternLayoutEncoder",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.classic.filter.ThresholdFilter",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.classic.LoggerContext"
  },
  {
    "name": "ch.qos.logback.classic.pattern.SyslogStartConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.classic.PatternLayout",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.ConsoleAppender",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.Context",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.encoder.Encoder",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.encoder.LayoutWrappingEncoder",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.FileAppender",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.filter.Filter",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.Layout",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.pattern.PostCompileProcessor",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.DateTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.helper.IntegerTokenConverter",
    "allPublicConstructors": true
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingFileAppender",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.RollingPolicy",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.TimeBasedRollingPolicy",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.rolling.TriggeringPolicy",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.spi.ContextAware",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.util.Duration",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "ch.qos.logback.core.util.FileSize",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "cn.hutool.extra.spring.SpringUtil",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.configclient.NacosDiscoveryClientConfigServiceBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.NacosDiscoveryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosServiceDiscovery",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.NacosDiscoveryProperties",
          "com.alibaba.cloud.nacos.NacosServiceManager"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.NacosDiscoveryClientConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosDiscoveryClient",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.discovery.NacosServiceDiscovery"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.NacosDiscoveryHeartBeatConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.NacosServiceDiscovery",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.reactive.NacosReactiveDiscoveryClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "failureToleranceEnabled"
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.discovery.reactive.NacosReactiveDiscoveryClientConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosReactiveDiscoveryClient",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.discovery.NacosServiceDiscovery"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.endpoint.NacosDiscoveryEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "nacosDiscovery",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.endpoint.NacosDiscoveryEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosDiscoveryEndpoint",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.NacosServiceManager",
          "com.alibaba.cloud.nacos.NacosDiscoveryProperties"
        ]
      },
      {
        "name": "nacosDiscoveryHealthIndicator",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.NacosServiceManager"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.logging.NacosLoggingAppRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.alibaba.cloud.nacos.NacosDiscoveryProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "applicationEventPublisher"
      },
      {
        "name": "environment"
      },
      {
        "name": "inetIPv6Utils"
      },
      {
        "name": "inetUtils"
      },
      {
        "name": "nacosServiceManager"
      },
      {
        "name": "service"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getClusterName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEndpoint",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeartBeatInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeartBeatTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getIp",
        "parameterTypes": [ ]
      },
      {
        "name": "getIpDeleteTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getIpType",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogName",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetadata",
        "parameterTypes": [ ]
      },
      {
        "name": "getNacosProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getNamespace",
        "parameterTypes": [ ]
      },
      {
        "name": "getNamingLoadCacheAtStart",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetworkInterface",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecretKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerAddr",
        "parameterTypes": [ ]
      },
      {
        "name": "getService",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getWatchDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getWeight",
        "parameterTypes": [ ]
      },
      {
        "name": "init",
        "parameterTypes": [ ]
      },
      {
        "name": "isEphemeral",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailFast",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailureToleranceEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isInstanceEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClusterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEndpoint",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEphemeral",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFailureToleranceEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGroup",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeartBeatInterval",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setHeartBeatTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setInetUtils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils"
        ]
      },
      {
        "name": "setInstanceEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIp",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpDeleteTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIpType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMetadata",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setNamespace",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNamingLoadCacheAtStart",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNetworkInterface",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRegisterEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSecretKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServerAddr",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setService",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setWatchDelay",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setWeight",
        "parameterTypes": [
          "float"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.NacosServiceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosServiceManager",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.NacosServiceManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.alibaba.cloud.nacos.registry.NacosAutoServiceRegistration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "onNacosDiscoveryInfoChangedEvent",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.event.NacosDiscoveryInfoChangedEvent"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.registry.NacosRegistration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "init",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.registry.NacosServiceRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.registry.NacosServiceRegistryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nacosAutoServiceRegistration",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.registry.NacosServiceRegistry",
          "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
          "com.alibaba.cloud.nacos.registry.NacosRegistration"
        ]
      },
      {
        "name": "nacosRegistration",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "com.alibaba.cloud.nacos.NacosDiscoveryProperties",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "nacosServiceRegistry",
        "parameterTypes": [
          "com.alibaba.cloud.nacos.NacosServiceManager",
          "com.alibaba.cloud.nacos.NacosDiscoveryProperties"
        ]
      }
    ]
  },
  {
    "name": "com.alibaba.cloud.nacos.util.InetIPv6Utils",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.alibaba.cloud.nacos.util.UtilIPv6AutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "inetIPv6Utils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtilsProperties"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.atomikos.AtomikosConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBorrowConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultIsolationLevel",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaintenanceInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxIdleTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getReapTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "setBorrowConnectionTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDefaultIsolationLevel",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaintenanceInterval",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdleTime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReapTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.basic.BasicDataSourceCreator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.beecp.BeeCpConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBorrowSemaphoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionFactoryClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTestIntegererval",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTestSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTransactionIsolationCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTransactionIsolationName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDelayTimeForNextClear",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnableJmx",
        "parameterTypes": [ ]
      },
      {
        "name": "getFairMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getForceCloseUsingOnClear",
        "parameterTypes": [ ]
      },
      {
        "name": "getHoldTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleCheckTimeIntegererval",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxWait",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolImplementClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getXaConnectionFactoryClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "setBorrowSemaphoreSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setConnectionFactoryClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestIntegererval",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setConnectionTestSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setConnectProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDefaultAutoCommit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultReadOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultTransactionIsolationCode",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultTransactionIsolationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDelayTimeForNextClear",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setEnableJmx",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFairMode",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setForceCloseUsingOnClear",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHoldTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIdleCheckTimeIntegererval",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxActive",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxWait",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPoolImplementClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXaConnectionFactoryClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.DataSourceCreator",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.DataSourceProperty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAtomikos",
        "parameterTypes": [ ]
      },
      {
        "name": "getBeecp",
        "parameterTypes": [ ]
      },
      {
        "name": "getDbcp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDruid",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikari",
        "parameterTypes": [ ]
      },
      {
        "name": "getInit",
        "parameterTypes": [ ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getLazy",
        "parameterTypes": [ ]
      },
      {
        "name": "getP6spy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPublicKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeata",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setAtomikos",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.atomikos.AtomikosConfig"
        ]
      },
      {
        "name": "setBeecp",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.beecp.BeeCpConfig"
        ]
      },
      {
        "name": "setDbcp2",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.dbcp.Dbcp2Config"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDruid",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.druid.DruidConfig"
        ]
      },
      {
        "name": "setHikari",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.hikaricp.HikariCpConfig"
        ]
      },
      {
        "name": "setInit",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.DatasourceInitProperties"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setP6spy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPoolName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeata",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.dbcp.Dbcp2Config",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccessToUnderlyingConnectionAllowed",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoCommitOnReturn",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheState",
        "parameterTypes": [ ]
      },
      {
        "name": "getClearStatementPoolOnReturn",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionFactoryClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionInitSqls",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultQueryTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTransactionIsolation",
        "parameterTypes": [ ]
      },
      {
        "name": "getDisconnectionSqlCodes",
        "parameterTypes": [ ]
      },
      {
        "name": "getEvictionPolicyClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getFastFailValidation",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getJmxName",
        "parameterTypes": [ ]
      },
      {
        "name": "getLifo",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogExpiredConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnLifetimeMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxOpenPreparedStatements",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxTotal",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxWaitMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinEvictableIdleTimeMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getNumTestsPerEvictionRun",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolPreparedStatements",
        "parameterTypes": [ ]
      },
      {
        "name": "getRollbackOnReturn",
        "parameterTypes": [ ]
      },
      {
        "name": "getSoftMinEvictableIdleTimeMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestOnBorrow",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestOnCreate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestOnReturn",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestWhileIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeBetweenEvictionRunsMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationQueryTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "setAccessToUnderlyingConnectionAllowed",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAutoCommitOnReturn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCacheState",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setClearStatementPoolOnReturn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setConnectionFactoryClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSqls",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setConnectionProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultAutoCommit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultQueryTimeoutSeconds",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultReadOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultTransactionIsolation",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDisconnectionSqlCodes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEvictionPolicyClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFastFailValidation",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setJmxName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLifo",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLogExpiredConnections",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxConnLifetimeMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMaxIdle",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxOpenPreparedStatements",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxTotal",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxWaitMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMinEvictableIdleTimeMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMinIdle",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNumTestsPerEvictionRun",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPoolPreparedStatements",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRollbackOnReturn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSoftMinEvictableIdleTimeMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTestOnBorrow",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestOnCreate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestOnReturn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestWhileIdle",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTimeBetweenEvictionRunsMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQueryTimeoutSeconds",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.DefaultDataSourceCreator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.druid.DruidConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncInit",
        "parameterTypes": [ ]
      },
      {
        "name": "getBreakAfterAcquireFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "getClearFiltersEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getCommonsLog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionErrorRetryAttempts",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTransactionIsolation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFailFast",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilters",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitConnectionSqls",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitGlobalVariants",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitVariants",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAliveBetweenTimeMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getKillWhenSocketReadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getLog4j",
        "parameterTypes": [ ]
      },
      {
        "name": "getLog4j2",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogAbandoned",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxEvictableIdleTimeMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPoolPreparedStatementPerConnectionSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxWait",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxWaitThreadCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinEvictableIdleTimeMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getNotFullTimeoutRetryCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getPhyMaxUseCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getPhyTimeoutMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getPoolPreparedStatements",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyFilters",
        "parameterTypes": [ ]
      },
      {
        "name": "getPublicKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoveAbandoned",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoveAbandonedTimeoutMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getResetStatEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSharePreparedStatements",
        "parameterTypes": [ ]
      },
      {
        "name": "getSlf4j",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocketTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getStat",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatSqlMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestOnBorrow",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestOnReturn",
        "parameterTypes": [ ]
      },
      {
        "name": "getTestWhileIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeBetweenConnectErrorMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeBetweenEvictionRunsMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeBetweenLogStatsMillis",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransactionQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseGlobalDataSourceStat",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseUnfairLock",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getWall",
        "parameterTypes": [ ]
      },
      {
        "name": "setAsyncInit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBreakAfterAcquireFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setClearFiltersEnable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCommonsLog",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setConnectionErrorRetryAttempts",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setConnectionProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultAutoCommit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultReadOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultTransactionIsolation",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitConnectionSqls",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitGlobalVariants",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setInitialSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setInitVariants",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKeepAliveBetweenTimeMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setKillWhenSocketReadTimeout",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLog4j",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setLog4j2",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setLogAbandoned",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxActive",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxEvictableIdleTimeMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMaxPoolPreparedStatementPerConnectionSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxWait",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxWaitThreadCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinEvictableIdleTimeMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMinIdle",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNotFullTimeoutRetryCount",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setPhyMaxUseCount",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPhyTimeoutMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setPoolPreparedStatements",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyFilters",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setRemoveAbandoned",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRemoveAbandonedTimeoutMillis",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setResetStatEnable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSharePreparedStatements",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSlf4j",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setSocketTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setStat",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatSqlMaxSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setTestOnBorrow",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestOnReturn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTestWhileIdle",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTimeBetweenConnectErrorMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTimeBetweenEvictionRunsMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTimeBetweenLogStatsMillis",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setTransactionQueryTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setUseGlobalDataSourceStat",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseUnfairLock",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setValidationQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationQueryTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWall",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.druid.DruidDataSourceCreator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.hikaricp.HikariCpConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCatalog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionInitSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTestQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getExceptionOverrideClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHealthCheckProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitializationFailTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsAllowPoolSuspension",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsAutoCommit",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsIsolateInternalQueries",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsReadOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getIsRegisterMbeans",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepaliveTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeakDetectionThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaximumPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxLifetime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getSealed",
        "parameterTypes": [ ]
      },
      {
        "name": "getTransactionIsolationName",
        "parameterTypes": [ ]
      },
      {
        "name": "getValidationTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setCatalog",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionInitSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTestQuery",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDataSourceProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setExceptionOverrideClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHealthCheckProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setInitializationFailTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setIsAllowPoolSuspension",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsAutoCommit",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsIsolateInternalQueries",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsReadOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setIsRegisterMbeans",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKeepaliveTime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setLeakDetectionThreshold",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMaximumPoolSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxLifetime",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setMaxPoolSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinIdle",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMinimumIdle",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSealed",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setTransactionIsolationName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setValidationTimeout",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.hikaricp.HikariDataSourceCreator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.creator.jndi.JndiDataSourceCreator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.event.DataSourceInitEvent",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.processor.DsProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.provider.DynamicDataSourceProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAopConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties"
        ]
      },
      {
        "name": "dsProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      },
      {
        "name": "dynamicDatasourceAnnotationAdvisor",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.processor.DsProcessor"
        ]
      },
      {
        "name": "dynamicDataSourceProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "dynamicTransactionAdvisor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDatasourceAopProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedPublicOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowedPublicOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties"
        ]
      },
      {
        "name": "dataSourceCreator",
        "parameterTypes": [
          "java.util.List",
          "com.baomidou.dynamic.datasource.event.DataSourceInitEvent"
        ]
      },
      {
        "name": "dataSourceInitEvent",
        "parameterTypes": [ ]
      },
      {
        "name": "ymlDynamicDataSourceProvider",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.DefaultDataSourceCreator"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$DsTxEventListenerFactoryConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$DsTxEventListenerFactoryConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dsTxEventListenerFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$DsTxEventListenerFactoryConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$DsTxEventListenerFactoryConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAssistConfiguration$DsTxEventListenerFactoryConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "dataSource",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "basicDataSourceCreator",
        "parameterTypes": [ ]
      },
      {
        "name": "jndiDataSourceCreator",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$DruidDataSourceCreatorConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$HikariDataSourceCreatorConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$DruidDataSourceCreatorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "applicationContext"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "druidDataSourceCreator",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$DruidDataSourceCreatorConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$DruidDataSourceCreatorConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$DruidDataSourceCreatorConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$HikariDataSourceCreatorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariDataSourceCreator",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$HikariDataSourceCreatorConfiguration$$SpringCGLIB$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$HikariDataSourceCreatorConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceCreatorAutoConfiguration$HikariDataSourceCreatorConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAop",
        "parameterTypes": [ ]
      },
      {
        "name": "getAtomikos",
        "parameterTypes": [ ]
      },
      {
        "name": "getBeecp",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatasource",
        "parameterTypes": [ ]
      },
      {
        "name": "getDbcp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getDruid",
        "parameterTypes": [ ]
      },
      {
        "name": "getGraceDestroy",
        "parameterTypes": [ ]
      },
      {
        "name": "getHikari",
        "parameterTypes": [ ]
      },
      {
        "name": "getLazy",
        "parameterTypes": [ ]
      },
      {
        "name": "getP6spy",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrimary",
        "parameterTypes": [ ]
      },
      {
        "name": "getPublicKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeata",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeataMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrict",
        "parameterTypes": [ ]
      },
      {
        "name": "setAop",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDatasourceAopProperties"
        ]
      },
      {
        "name": "setAtomikos",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.atomikos.AtomikosConfig"
        ]
      },
      {
        "name": "setBeecp",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.beecp.BeeCpConfig"
        ]
      },
      {
        "name": "setDatasource",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setDbcp2",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.dbcp.Dbcp2Config"
        ]
      },
      {
        "name": "setDruid",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.druid.DruidConfig"
        ]
      },
      {
        "name": "setGraceDestroy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setHikari",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.creator.hikaricp.HikariCpConfig"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setP6spy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setPrimary",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPublicKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSeata",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSeataMode",
        "parameterTypes": [
          "com.baomidou.dynamic.datasource.enums.SeataMode"
        ]
      },
      {
        "name": "setStrategy",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setStrict",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.dynamic.datasource.tx.DsTxEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.DdlApplicationRunner",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.IdentifierGeneratorAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.MybatisDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.MybatisPlusAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "ddlApplicationRunner",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "sqlSessionFactory",
        "parameterTypes": [
          "javax.sql.DataSource"
        ]
      },
      {
        "name": "sqlSessionTemplate",
        "parameterTypes": [
          "org.apache.ibatis.session.SqlSessionFactory"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.MybatisPlusInnerInterceptorAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.MybatisPlusLanguageDriverAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigurationProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultScriptingLanguageDriver",
        "parameterTypes": [ ]
      },
      {
        "name": "getExecutorType",
        "parameterTypes": [ ]
      },
      {
        "name": "getGlobalConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapperLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeAliasesPackage",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeAliasesSuperType",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeEnumsPackage",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeHandlersPackage",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckConfigLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setCheckConfigLocation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfiguration",
        "parameterTypes": [
          "com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties$CoreConfiguration"
        ]
      },
      {
        "name": "setConfigurationProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDefaultScriptingLanguageDriver",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setExecutorType",
        "parameterTypes": [
          "org.apache.ibatis.session.ExecutorType"
        ]
      },
      {
        "name": "setGlobalConfig",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.config.GlobalConfig"
        ]
      },
      {
        "name": "setMapperLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setTypeAliasesPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeAliasesSuperType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setTypeEnumsPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeHandlersPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.MybatisPlusProperties$CoreConfiguration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAggressiveLazyLoading",
        "parameterTypes": [ ]
      },
      {
        "name": "getArgNameBasedConstructorAutoMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoMappingBehavior",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoMappingUnknownColumnBehavior",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getCallSettersOnNulls",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigurationFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabaseId",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultEnumTypeHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultExecutorType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultResultSetType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultScriptingLanguageDriver",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultSqlProviderType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultStatementTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcTypeForNull",
        "parameterTypes": [ ]
      },
      {
        "name": "getLazyLoadingEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getLazyLoadTriggerMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocalCacheScope",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogImpl",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapUnderscoreToCamelCase",
        "parameterTypes": [ ]
      },
      {
        "name": "getMultipleResultSetsEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getNullableOnForEach",
        "parameterTypes": [ ]
      },
      {
        "name": "getReturnInstanceForEmptyRow",
        "parameterTypes": [ ]
      },
      {
        "name": "getSafeResultHandlerEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getSafeRowBoundsEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getShrinkWhitespacesInSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseActualParamName",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseColumnLabel",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseGeneratedKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseGeneratedShortKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getVariables",
        "parameterTypes": [ ]
      },
      {
        "name": "getVfsImpl",
        "parameterTypes": [ ]
      },
      {
        "name": "setAggressiveLazyLoading",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setArgNameBasedConstructorAutoMapping",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAutoMappingBehavior",
        "parameterTypes": [
          "org.apache.ibatis.session.AutoMappingBehavior"
        ]
      },
      {
        "name": "setAutoMappingUnknownColumnBehavior",
        "parameterTypes": [
          "org.apache.ibatis.session.AutoMappingUnknownColumnBehavior"
        ]
      },
      {
        "name": "setCacheEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCallSettersOnNulls",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setConfigurationFactory",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDatabaseId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultEnumTypeHandler",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultExecutorType",
        "parameterTypes": [
          "org.apache.ibatis.session.ExecutorType"
        ]
      },
      {
        "name": "setDefaultFetchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultResultSetType",
        "parameterTypes": [
          "org.apache.ibatis.mapping.ResultSetType"
        ]
      },
      {
        "name": "setDefaultScriptingLanguageDriver",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultSqlProviderType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultStatementTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setJdbcTypeForNull",
        "parameterTypes": [
          "org.apache.ibatis.type.JdbcType"
        ]
      },
      {
        "name": "setLazyLoadingEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setLazyLoadTriggerMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLocalCacheScope",
        "parameterTypes": [
          "org.apache.ibatis.session.LocalCacheScope"
        ]
      },
      {
        "name": "setLogImpl",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setLogPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapUnderscoreToCamelCase",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMultipleResultSetsEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNullableOnForEach",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setReturnInstanceForEmptyRow",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSafeResultHandlerEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSafeRowBoundsEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setShrinkWhitespacesInSql",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseActualParamName",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseColumnLabel",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGeneratedKeys",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseGeneratedShortKey",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setVfsImpl",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.autoconfigure.SafetyEncryptProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.baomidou.mybatisplus.core.config.GlobalConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAnnotationHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getDbConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdentifierGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapperRegistryCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetaObjectHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getPostInitTableInfoHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlInjector",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlSessionFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuperMapperClass",
        "parameterTypes": [ ]
      },
      {
        "name": "isBanner",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSqlRunner",
        "parameterTypes": [ ]
      },
      {
        "name": "setAnnotationHandler",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.handlers.AnnotationHandler"
        ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDbConfig",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig"
        ]
      },
      {
        "name": "setEnableSqlRunner",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIdentifierGenerator",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.incrementer.IdentifierGenerator"
        ]
      },
      {
        "name": "setMapperRegistryCache",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setMetaObjectHandler",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.handlers.MetaObjectHandler"
        ]
      },
      {
        "name": "setPostInitTableInfoHandler",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.handlers.PostInitTableInfoHandler"
        ]
      },
      {
        "name": "setSqlInjector",
        "parameterTypes": [
          "com.baomidou.mybatisplus.core.injector.ISqlInjector"
        ]
      },
      {
        "name": "setSqlSessionFactory",
        "parameterTypes": [
          "org.apache.ibatis.session.SqlSessionFactory"
        ]
      },
      {
        "name": "setSuperMapperClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.core.config.GlobalConfig$DbConfig",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getColumnFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getEscapeSymbol",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdType",
        "parameterTypes": [ ]
      },
      {
        "name": "getInsertStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyGenerators",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogicDeleteField",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogicDeleteValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogicNotDeleteValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getTableFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getTablePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getUpdateStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhereStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCapitalMode",
        "parameterTypes": [ ]
      },
      {
        "name": "isReplacePlaceholder",
        "parameterTypes": [ ]
      },
      {
        "name": "isTableUnderline",
        "parameterTypes": [ ]
      },
      {
        "name": "setCapitalMode",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setColumnFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEscapeSymbol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIdType",
        "parameterTypes": [
          "com.baomidou.mybatisplus.annotation.IdType"
        ]
      },
      {
        "name": "setInsertStrategy",
        "parameterTypes": [
          "com.baomidou.mybatisplus.annotation.FieldStrategy"
        ]
      },
      {
        "name": "setKeyGenerators",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setLogicDeleteField",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogicDeleteValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLogicNotDeleteValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPropertyFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReplacePlaceholder",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSelectStrategy",
        "parameterTypes": [
          "com.baomidou.mybatisplus.annotation.FieldStrategy"
        ]
      },
      {
        "name": "setTableFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTablePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTableUnderline",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUpdateStrategy",
        "parameterTypes": [
          "com.baomidou.mybatisplus.annotation.FieldStrategy"
        ]
      },
      {
        "name": "setWhereStrategy",
        "parameterTypes": [
          "com.baomidou.mybatisplus.annotation.FieldStrategy"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.extension.service.impl.ServiceImpl",
    "fields": [
      {
        "name": "baseMapper"
      }
    ],
    "methods": [
      {
        "name": "removeBatchByIds",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "removeBatchByIds",
        "parameterTypes": [
          "java.util.Collection",
          "int",
          "boolean"
        ]
      },
      {
        "name": "removeByIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "saveBatch",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "saveOrUpdateBatch",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      },
      {
        "name": "updateBatchById",
        "parameterTypes": [
          "java.util.Collection",
          "int"
        ]
      }
    ]
  },
  {
    "name": "com.baomidou.mybatisplus.extension.service.IService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "removeBatchByIds",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "removeBatchByIds",
        "parameterTypes": [
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "removeByIds",
        "parameterTypes": [
          "java.util.Collection",
          "boolean"
        ]
      },
      {
        "name": "saveBatch",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "saveOrUpdateBatch",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "updateBatchById",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.core.Versioned",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ObjectMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.fasterxml.jackson.databind.PropertyNamingStrategies",
    "fields": [
      {
        "name": "KEBAB_CASE"
      },
      {
        "name": "LOWER_CAMEL_CASE"
      },
      {
        "name": "LOWER_CASE"
      },
      {
        "name": "LOWER_DOT_CASE"
      },
      {
        "name": "SNAKE_CASE"
      },
      {
        "name": "UPPER_CAMEL_CASE"
      },
      {
        "name": "UPPER_SNAKE_CASE"
      }
    ]
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.ClassSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.FileSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicBooleanSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicIntegerSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.StdJdkSerializers$AtomicLongSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.databind.ser.std.TokenBufferSerializer",
    "allPublicConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jdk8.Jdk8Module",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.datatype.jsr310.JavaTimeModule",
    "condition": {
      "typeReachable": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
    },
    "allDeclaredConstructors": true
  },
  {
    "name": "com.fasterxml.jackson.module.paramnames.ParameterNamesModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "com.github.pagehelper.autoconfigure.PageHelperStandardProperties"
        ]
      }
    ]
  },
  {
    "name": "com.github.pagehelper.autoconfigure.PageHelperAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "com.github.pagehelper.autoconfigure.PageHelperStandardProperties"
        ]
      }
    ]
  },
  {
    "name": "com.github.pagehelper.autoconfigure.PageHelperProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoDialectClass",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoRuntimeDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getCloseConn",
        "parameterTypes": [ ]
      },
      {
        "name": "getCountSqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getDialectAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getHelperDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getOffsetAsPageNum",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrderBySqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageSizeZero",
        "parameterTypes": [ ]
      },
      {
        "name": "getParams",
        "parameterTypes": [ ]
      },
      {
        "name": "getReasonable",
        "parameterTypes": [ ]
      },
      {
        "name": "getRowBoundsWithCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlServerSqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getSupportMethodsArguments",
        "parameterTypes": [ ]
      },
      {
        "name": "setAsyncCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAutoDialect",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAutoDialectClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAutoRuntimeDialect",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCloseConn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCountSqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDialectAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHelperDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setOffsetAsPageNum",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOrderBySqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageSizeZero",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParams",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReasonable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRowBoundsWithCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSqlServerSqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportMethodsArguments",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "com.github.pagehelper.autoconfigure.PageHelperStandardProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getAsyncCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoDialectClass",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoRuntimeDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getBoundSqlInterceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getCloseConn",
        "parameterTypes": [ ]
      },
      {
        "name": "getCountColumn",
        "parameterTypes": [ ]
      },
      {
        "name": "getCountSqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getDialectAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getHelperDialect",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepOrderBy",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepSubSelectOrderBy",
        "parameterTypes": [ ]
      },
      {
        "name": "getOffsetAsPageNum",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrderBySqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageSizeZero",
        "parameterTypes": [ ]
      },
      {
        "name": "getParams",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getReasonable",
        "parameterTypes": [ ]
      },
      {
        "name": "getReplaceSql",
        "parameterTypes": [ ]
      },
      {
        "name": "getRowBoundsWithCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlCacheClass",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlServerSqlParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getSupportMethodsArguments",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseSqlserver2012",
        "parameterTypes": [ ]
      },
      {
        "name": "setAsyncCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAutoDialect",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAutoDialectClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAutoRuntimeDialect",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setBoundSqlInterceptors",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCloseConn",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCountColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCountSqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDialectAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHelperDialect",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeepOrderBy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setKeepSubSelectOrderBy",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOffsetAsPageNum",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setOrderBySqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPageSizeZero",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setParams",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReasonable",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setReplaceSql",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRowBoundsWithCount",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSqlCacheClass",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSqlServerSqlParser",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSupportMethodsArguments",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseSqlserver2012",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "com.github.pagehelper.autoconfigure.PageHelperProperties"
        ]
      }
    ]
  },
  {
    "name": "com.github.pagehelper.PageInfo",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEndRow",
        "parameterTypes": [ ]
      },
      {
        "name": "getNavigateFirstPage",
        "parameterTypes": [ ]
      },
      {
        "name": "getNavigateLastPage",
        "parameterTypes": [ ]
      },
      {
        "name": "getNavigatepageNums",
        "parameterTypes": [ ]
      },
      {
        "name": "getNavigatePages",
        "parameterTypes": [ ]
      },
      {
        "name": "getNextPage",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageNum",
        "parameterTypes": [ ]
      },
      {
        "name": "getPages",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrePage",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getStartRow",
        "parameterTypes": [ ]
      },
      {
        "name": "isHasNextPage",
        "parameterTypes": [ ]
      },
      {
        "name": "isHasPreviousPage",
        "parameterTypes": [ ]
      },
      {
        "name": "isIsFirstPage",
        "parameterTypes": [ ]
      },
      {
        "name": "isIsLastPage",
        "parameterTypes": [ ]
      },
      {
        "name": "setEndRow",
        "parameterTypes": [
          "long"
        ]
      },
      {
        "name": "setHasNextPage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHasPreviousPage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsFirstPage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIsLastPage",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNavigateFirstPage",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNavigateLastPage",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNavigatepageNums",
        "parameterTypes": [
          "int[]"
        ]
      },
      {
        "name": "setNavigatePages",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setNextPage",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPageNum",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPages",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPrePage",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStartRow",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "com.github.pagehelper.PageSerializable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getList",
        "parameterTypes": [ ]
      },
      {
        "name": "getTotal",
        "parameterTypes": [ ]
      },
      {
        "name": "setList",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTotal",
        "parameterTypes": [
          "long"
        ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.converter.VirtualTableConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.CacheManagerRegister",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "eventPublisher"
      },
      {
        "name": "refershCacheName"
      },
      {
        "name": "register"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableCache",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableCacheManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "virtualTableCache"
      },
      {
        "name": "virtualTableMapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableColumnsCache",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableColumnsCacheManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "virtualTableColumnsCache"
      },
      {
        "name": "virtualTableColumnsMapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableDataCache",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableDataCacheManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "virtualTableDataCache"
      },
      {
        "name": "virtualTableDataMapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableIndexCache",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.impl.VirtualTableIndexCacheManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "virtualTableIndexCache"
      },
      {
        "name": "virtualTableIndexMapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.repository.impl.VirtualTableDbRepositoryImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "converter"
      },
      {
        "name": "mapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.cache.repository.VirtualTableRepository",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.common.cache.Cache",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.common.cache.CacheManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.common.converter.RedissionConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.exception.RestExceptionHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.http.converter.HttpMessageNotReadableException"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.HttpMediaTypeNotSupportedException"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.HttpRequestMethodNotSupportedException"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.bind.MethodArgumentNotValidException"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.bind.MissingServletRequestParameterException"
        ]
      },
      {
        "name": "handleError",
        "parameterTypes": [
          "org.springframework.web.method.annotation.MethodArgumentTypeMismatchException"
        ]
      },
      {
        "name": "handleException",
        "parameterTypes": [
          "java.lang.Exception"
        ]
      },
      {
        "name": "handleServiceException",
        "parameterTypes": [
          "com.xiacong.common.exception.ServiceException"
        ]
      },
      {
        "name": "handleSqlException",
        "parameterTypes": [
          "org.springframework.dao.DataAccessException"
        ]
      },
      {
        "name": "MethodArgumentNotValidExceptionHandler",
        "parameterTypes": [
          "org.springframework.validation.BindException"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.exception.RestExceptionHandler$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.exception.rpc.RpcExceptionInterceptorConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultPointcutAdvisor2",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.exception.rpc.RpcExceptionInterceptorConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.exception.rpc.RpcExceptionInterceptorConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.xiacong.common.exception.rpc.RpcExceptionInterceptorConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.xiacong.common.filter.SysLogFilter",
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.repository.Repository",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.common.result.ResultVO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getData",
        "parameterTypes": [ ]
      },
      {
        "name": "getMsg",
        "parameterTypes": [ ]
      },
      {
        "name": "setCode",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setData",
        "parameterTypes": [
          "java.lang.Object"
        ]
      },
      {
        "name": "setMsg",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.thread.ExecutorConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "controlAsync",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.thread.ExecutorConfig$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.common.thread.ExecutorConfig$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.xiacong.common.thread.ExecutorConfig$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.xiacong.common.util.ApplicationContextUtil",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.config.MyBeanFactoryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.config.SecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "authenticationProvider"
      },
      {
        "name": "jwtAccessDeniedHandler"
      },
      {
        "name": "jwtAuthenticationEntryPoint"
      },
      {
        "name": "jwtAuthenticationFilter"
      },
      {
        "name": "jwtLogoutSuccessHandler"
      },
      {
        "name": "loginFailureHandler"
      },
      {
        "name": "loginSuccessHandler"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationManager",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "corsConfigurationSource",
        "parameterTypes": [ ]
      },
      {
        "name": "filterChain",
        "parameterTypes": [
          "org.springframework.security.config.annotation.web.builders.HttpSecurity"
        ]
      },
      {
        "name": "passwordEncoder",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.config.SecurityConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.config.SecurityConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.xiacong.config.SecurityConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "com.xiacong.controller.BookController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      }
    ],
    "methods": [
      {
        "name": "findAll",
        "parameterTypes": [ ]
      },
      {
        "name": "findById",
        "parameterTypes": [
          "java.lang.Long"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.controller.LoginController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "loginService"
      }
    ],
    "methods": [
      {
        "name": "login",
        "parameterTypes": [
          "com.xiacong.model.dto.LoginDTO"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.controller.TestController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "taskExample"
      }
    ],
    "methods": [
      {
        "name": "hello",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.controller.VirtualTableColumnsController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.controller.VirtualTableController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "virtualTableService"
      }
    ],
    "methods": [
      {
        "name": "getVirtualTables",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.controller.VirtualTableDataController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.controller.VirtualTableIndexController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.filter.JwtAuthenticationFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "userInfoRedisUtil"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.flow.FlowEngine",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "executor"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.flow.FlowFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "flowEngine"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.handler.AppAuthenticationProviderImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "userDetailsService"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.handler.JwtAccessDeniedHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.handler.JwtAuthenticationEntryPoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.handler.JwtLogoutSuccessHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "userInfoRedisUtil"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.handler.LoginFailureHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.handler.LoginSuccessHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "jwtUtil"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.listener.CacheRefershListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "cacheManagerRegister"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.listener.FlowDataLoadListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "flowFactory"
      }
    ],
    "methods": [
      {
        "name": "init",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.Main",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.Main$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.Main__ApplicationContextInitializer",
    "condition": {
      "typeReachable": "com.xiacong.Main"
    },
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.model.domain.Book",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAgeRating",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setAgeRating",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setId",
        "parameterTypes": [
          "java.lang.Long"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.xiacong.model.dto.LoginDTO",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getPasswd",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsrName",
        "parameterTypes": [ ]
      },
      {
        "name": "setPasswd",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsrName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "com.xiacong.provider.TestProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.provider.TestProviderImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.provider.TestProviderImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.repository.impl.RedisRepositoryImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "converter"
      },
      {
        "name": "redissonUtil"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.repository.RedisRepostory",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.service.BookService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.BookServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.BookServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.LoginServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "authenticationProvider"
      },
      {
        "name": "jwtUtil"
      },
      {
        "name": "userInfoRedisUtil"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysGroupRoleServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysGroupRoleServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysGroupServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "groupRoleService"
      },
      {
        "name": "mapper"
      },
      {
        "name": "usrGroupService"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysGroupServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysPermissionServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      },
      {
        "name": "rolePermissionService"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysPermissionServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysRolePermissionServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysRolePermissionServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysRoleServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "groupRoleService"
      },
      {
        "name": "mapper"
      },
      {
        "name": "usrRoleService"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysRoleServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysUsrGroupServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysUsrGroupServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysUsrRoleServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysUsrRoleServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.SysUsrServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "mapper"
      },
      {
        "name": "usrGroupService"
      },
      {
        "name": "usrRoleService"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.SysUsrServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.UserDetailsServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "groupService"
      },
      {
        "name": "permissionService"
      },
      {
        "name": "roleService"
      },
      {
        "name": "usrService"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableColumnsServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableColumnsServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableDataServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableDataServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableIndexServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableIndexServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableServiceImpl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "repository"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.service.impl.VirtualTableServiceImpl$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.IVirtualTableColumnsService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.IVirtualTableDataService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.IVirtualTableIndexService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.IVirtualTableService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.LoginService",
    "queryAllPublicMethods": true
  },
  {
    "name": "com.xiacong.service.SysGroupRoleService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysGroupService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysPermissionService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysRolePermissionService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysRoleService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysUsrGroupService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysUsrRoleService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.service.SysUsrService",
    "queryAllPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.task.LocalTaskExample",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "fields": [
      {
        "name": "executor"
      }
    ],
    "methods": [
      {
        "name": "sayHello1",
        "parameterTypes": [ ]
      },
      {
        "name": "sayHello2",
        "parameterTypes": [ ]
      },
      {
        "name": "sayHello3",
        "parameterTypes": [ ]
      },
      {
        "name": "testMDC2",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.task.LocalTaskExample$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "com.xiacong.util.JwtUtil",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.util.RedisSequenceUtil",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ],
    "queriedMethods": [
      {
        "name": "setRedisRepostory",
        "parameterTypes": [
          "com.xiacong.repository.RedisRepostory"
        ]
      }
    ]
  },
  {
    "name": "com.xiacong.util.RedissonUtil",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "redisson"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.xiacong.util.UserInfoRedisUtil",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "redissonUtil"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "com.zaxxer.hikari.HikariDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "int[]"
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmCompilationMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmGcMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmHeapPressureMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmInfoMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.logging.LogbackMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.binder.MeterBinder",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.FileDescriptorMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.ProcessorMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.binder.system.UptimeMetrics",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Clock",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.config.MeterRegistryConfig",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.MeterRegistry",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.core.instrument.observation.DefaultMeterObservationHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.observation.MeterObservationHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleConfig",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.simple.SimpleMeterRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.micrometer.core.instrument.Statistic",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getTagValueRepresentation",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.aop.ObservedAspect",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "observeClass",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint"
        ]
      },
      {
        "name": "observeMethod",
        "parameterTypes": [
          "org.aspectj.lang.ProceedingJoinPoint"
        ]
      }
    ]
  },
  {
    "name": "io.micrometer.observation.ObservationFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationPredicate",
    "queryAllPublicMethods": true
  },
  {
    "name": "io.micrometer.observation.ObservationRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "io.undertow.protocols.ssl.UndertowAcceptingSslChannel",
    "fields": [
      {
        "name": "ssl"
      }
    ]
  },
  {
    "name": "io.undertow.Undertow",
    "fields": [
      {
        "name": "channels"
      },
      {
        "name": "listeners"
      }
    ]
  },
  {
    "name": "io.undertow.Undertow$ListenerConfig",
    "fields": [
      {
        "name": "port"
      },
      {
        "name": "type"
      }
    ]
  },
  {
    "name": "jakarta.inject.Inject"
  },
  {
    "name": "jakarta.inject.Provider"
  },
  {
    "name": "jakarta.inject.Qualifier"
  },
  {
    "name": "jakarta.servlet.Filter",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.MultipartConfigElement",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "jakarta.servlet.Registration",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "jakarta.servlet.Servlet",
    "queryAllPublicMethods": true
  },
  {
    "name": "jakarta.servlet.ServletConfig",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.io.Closeable",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.io.OutputStream",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.AutoCloseable",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Class"
  },
  {
    "name": "java.lang.Double"
  },
  {
    "name": "java.lang.Enum",
    "methods": [
      {
        "name": "getDeclaringClass",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.lang.Integer"
  },
  {
    "name": "java.lang.Iterable",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.lang.Long"
  },
  {
    "name": "java.lang.management.ThreadInfo"
  },
  {
    "name": "java.lang.Number"
  },
  {
    "name": "java.lang.String",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.lang.String[]"
  },
  {
    "name": "java.lang.Throwable",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "java.lang.Void"
  },
  {
    "name": "java.net.URI",
    "allDeclaredConstructors": true
  },
  {
    "name": "java.nio.charset.Charset",
    "allPublicConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "java.sql.Date",
    "condition": {
      "typeReachable": "java.sql.Date"
    },
    "methods": [
      {
        "name": "toLocalDate",
        "parameterTypes": [ ]
      },
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.time.LocalDate"
        ]
      }
    ]
  },
  {
    "name": "java.sql.Wrapper",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Collection"
  },
  {
    "name": "java.util.concurrent.Executor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "java.util.EventListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.function.BiPredicate",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.Hashtable",
    "methods": [
      {
        "name": "isEmpty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "java.util.List"
  },
  {
    "name": "java.util.Map",
    "queryAllPublicMethods": true
  },
  {
    "name": "java.util.NavigableSet"
  },
  {
    "name": "java.util.Properties",
    "allPublicMethods": true
  },
  {
    "name": "java.util.Set"
  },
  {
    "name": "javax.money.MonetaryAmount"
  },
  {
    "name": "javax.sql.CommonDataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "javax.sql.DataSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "kotlin.Metadata"
  },
  {
    "name": "kotlin.reflect.full.KClasses"
  },
  {
    "name": "org.aopalliance.aop.Advice",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.Interceptor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.aopalliance.intercept.MethodInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.apache.dubbo.config.AbstractInterfaceConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setInterface",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.AbstractMethodConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.AbstractServiceConfig",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.dubbo.config.ServiceConfig",
    "allDeclaredFields": true
  },
  {
    "name": "org.apache.dubbo.config.ServiceConfigBase",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setRef",
        "parameterTypes": [
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.beans.factory.annotation.DubboConfigAliasPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.beans.factory.annotation.ServiceAnnotationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.beans.factory.annotation.ServicePackagesHolder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.beans.factory.config.DubboConfigDefaultPropertyValueBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.context.DubboConfigApplicationListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.context.DubboConfigBeanInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.context.DubboContextPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.context.DubboDeployApplicationListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.reference.ReferenceBeanManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.dubbo.config.spring.ServiceBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.dubbo.rpc.model.ModuleModel"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.builder.annotation.MethodResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.ibatis.builder.annotation.MapperAnnotationBuilder",
          "java.lang.reflect.Method"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.builder.BaseBuilder",
    "methods": [
      {
        "name": "getConfiguration",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.builder.CacheRefResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.ibatis.builder.MapperBuilderAssistant",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.builder.ResultMapResolver",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.ibatis.builder.MapperBuilderAssistant",
          "java.lang.String",
          "java.lang.Class",
          "java.lang.String",
          "org.apache.ibatis.mapping.Discriminator",
          "java.util.List",
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.cache.Cache",
    "methods": [
      {
        "name": "getReadWriteLock",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.mapping.MappedStatement",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabaseId",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyColumns",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getLang",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterMap",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getResulSets",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultMaps",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultSets",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultSetType",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlCommandType",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlSource",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatementLog",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatementType",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isDirtySelect",
        "parameterTypes": [ ]
      },
      {
        "name": "isFlushCacheRequired",
        "parameterTypes": [ ]
      },
      {
        "name": "isResultOrdered",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseCache",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.mapping.ParameterMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.mapping.ParameterMapping",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpression",
        "parameterTypes": [ ]
      },
      {
        "name": "getJavaType",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcTypeName",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getNumericScale",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperty",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultMapId",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeHandler",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.mapping.ResultFlag",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.mapping.ResultMap",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorResultMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getDiscriminator",
        "parameterTypes": [ ]
      },
      {
        "name": "getId",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdResultMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappedColumns",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappedProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyResultMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.mapping.ResultMapping",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getColumn",
        "parameterTypes": [ ]
      },
      {
        "name": "getColumnPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getComposites",
        "parameterTypes": [ ]
      },
      {
        "name": "getFlags",
        "parameterTypes": [ ]
      },
      {
        "name": "getForeignColumn",
        "parameterTypes": [ ]
      },
      {
        "name": "getJavaType",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcType",
        "parameterTypes": [ ]
      },
      {
        "name": "getNestedQueryId",
        "parameterTypes": [ ]
      },
      {
        "name": "getNestedResultMapId",
        "parameterTypes": [ ]
      },
      {
        "name": "getNotNullColumns",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperty",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultSet",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompositeResult",
        "parameterTypes": [ ]
      },
      {
        "name": "isLazy",
        "parameterTypes": [ ]
      },
      {
        "name": "isSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "setForeignColumn",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLazy",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.parsing.XNode",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.apache.ibatis.parsing.XPathParser",
          "org.w3c.dom.Node",
          "java.util.Properties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.plugin.Interceptor",
    "methods": [
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.session.Configuration",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoMappingBehavior",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutoMappingUnknownColumnBehavior",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getCaches",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigurationFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabaseId",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultExecutorType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultResultSetType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultScriptingLanguageInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultScriptingLanuageInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultSqlProviderType",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultStatementTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnvironment",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncompleteCacheRefs",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncompleteMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncompleteResultMaps",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncompleteStatements",
        "parameterTypes": [ ]
      },
      {
        "name": "getInterceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getJdbcTypeForNull",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyGeneratorNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyGenerators",
        "parameterTypes": [ ]
      },
      {
        "name": "getLanguageRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getLazyLoadTriggerMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocalCacheScope",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogImpl",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappedStatementNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getMappedStatements",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapperRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getObjectFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getObjectWrapperFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterMapNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterMaps",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getReflectorFactory",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultMapNames",
        "parameterTypes": [ ]
      },
      {
        "name": "getResultMaps",
        "parameterTypes": [ ]
      },
      {
        "name": "getSqlFragments",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeAliasRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeHandlerRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getVariables",
        "parameterTypes": [ ]
      },
      {
        "name": "getVfsImpl",
        "parameterTypes": [ ]
      },
      {
        "name": "isAggressiveLazyLoading",
        "parameterTypes": [ ]
      },
      {
        "name": "isArgNameBasedConstructorAutoMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "isCacheEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isCallSettersOnNulls",
        "parameterTypes": [ ]
      },
      {
        "name": "isLazyLoadingEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isMapUnderscoreToCamelCase",
        "parameterTypes": [ ]
      },
      {
        "name": "isMultipleResultSetsEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isNullableOnForEach",
        "parameterTypes": [ ]
      },
      {
        "name": "isReturnInstanceForEmptyRow",
        "parameterTypes": [ ]
      },
      {
        "name": "isSafeResultHandlerEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isSafeRowBoundsEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isShrinkWhitespacesInSql",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseActualParamName",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseColumnLabel",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseGeneratedKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "setAggressiveLazyLoading",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setArgNameBasedConstructorAutoMapping",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAutoMappingBehavior",
        "parameterTypes": [
          "org.apache.ibatis.session.AutoMappingBehavior"
        ]
      },
      {
        "name": "setAutoMappingUnknownColumnBehavior",
        "parameterTypes": [
          "org.apache.ibatis.session.AutoMappingUnknownColumnBehavior"
        ]
      },
      {
        "name": "setCacheEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCallSettersOnNulls",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConfigurationFactory",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDatabaseId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultEnumTypeHandler",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultExecutorType",
        "parameterTypes": [
          "org.apache.ibatis.session.ExecutorType"
        ]
      },
      {
        "name": "setDefaultFetchSize",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setDefaultResultSetType",
        "parameterTypes": [
          "org.apache.ibatis.mapping.ResultSetType"
        ]
      },
      {
        "name": "setDefaultScriptingLanguage",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultSqlProviderType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setDefaultStatementTimeout",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.apache.ibatis.mapping.Environment"
        ]
      },
      {
        "name": "setJdbcTypeForNull",
        "parameterTypes": [
          "org.apache.ibatis.type.JdbcType"
        ]
      },
      {
        "name": "setLazyLoadingEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyLoadTriggerMethods",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setLocalCacheScope",
        "parameterTypes": [
          "org.apache.ibatis.session.LocalCacheScope"
        ]
      },
      {
        "name": "setLogImpl",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setLogPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMapUnderscoreToCamelCase",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMultipleResultSetsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setNullableOnForEach",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setObjectFactory",
        "parameterTypes": [
          "org.apache.ibatis.reflection.factory.ObjectFactory"
        ]
      },
      {
        "name": "setObjectWrapperFactory",
        "parameterTypes": [
          "org.apache.ibatis.reflection.wrapper.ObjectWrapperFactory"
        ]
      },
      {
        "name": "setProxyFactory",
        "parameterTypes": [
          "org.apache.ibatis.executor.loader.ProxyFactory"
        ]
      },
      {
        "name": "setReflectorFactory",
        "parameterTypes": [
          "org.apache.ibatis.reflection.ReflectorFactory"
        ]
      },
      {
        "name": "setReturnInstanceForEmptyRow",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSafeResultHandlerEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSafeRowBoundsEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setShrinkWhitespacesInSql",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseActualParamName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseColumnLabel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseGeneratedKeys",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setVariables",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setVfsImpl",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.apache.ibatis.session.SqlSession",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.apache.ibatis.session.SqlSessionFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.eclipse.core.runtime.FileLocator"
  },
  {
    "name": "org.flowable.app.api.AppEngineConfigurationApi",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.app.api.AppManagementService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.app.api.AppRepositoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.app.spring.AppEngineFactoryBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.app.spring.SpringAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnEngineConfigurationApi",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnHistoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnManagementService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnMigrationService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnRepositoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnRuntimeService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.CmmnTaskService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.api.DynamicCmmnService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.engine.CmmnEngine",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.engine.CmmnEngineConfiguration",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.cmmn.engine.configurator.CmmnEngineConfigurator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.cmmn.spring.SpringCmmnEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.common.engine.api.async.AsyncTaskExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.common.engine.api.Engine",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.common.engine.impl.AbstractEngineConfiguration",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.common.engine.impl.async.AsyncTaskExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "getCorePoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadPoolNamingPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setCorePoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThreadPoolNamingPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.common.engine.impl.EngineConfigurator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.common.engine.impl.HasExpressionManagerEngineConfiguration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.common.engine.impl.HasVariableServiceConfiguration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.common.engine.impl.HasVariableTypes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.common.engine.impl.ScriptingEngineAwareEngineConfiguration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.common.spring.SpringEngineConfiguration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.dmn.api.DmnDecisionService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.dmn.api.DmnEngineConfigurationApi",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.dmn.api.DmnHistoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.dmn.api.DmnManagementService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.dmn.api.DmnRepositoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.dmn.engine.configurator.DmnEngineConfigurator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.dmn.engine.DmnEngine",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.dmn.spring.SpringDmnEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.configurator.ProcessEngineConfigurator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.DynamicBpmnService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.FormService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.HistoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.IdentityService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.impl.cfg.ProcessEngineConfigurationImpl",
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.engine.ManagementService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.ProcessEngine",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.ProcessMigrationService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.RepositoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.RuntimeService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.engine.TaskService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventManagementService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRegistryConfigurationApi",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.eventregistry.api.EventRepositoryService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.eventregistry.impl.configurator.EventRegistryEngineConfigurator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.eventregistry.impl.EventRegistryEngine",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.eventregistry.spring.SpringEventRegistryEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.idm.api.IdmEngineConfigurationApi",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.flowable.idm.api.IdmIdentityService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.idm.api.IdmManagementService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.idm.engine.configurator.IdmEngineConfigurator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.idm.engine.IdmEngine",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.idm.spring.SpringIdmEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AbstractAsyncExecutor",
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AsyncExecutor",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.job.service.impl.asyncexecutor.AsyncJobExecutorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcquireRunnableThreadName",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncJobLockTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncJobsGlobalLockForceAcquireAfter",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncJobsGlobalLockPollRate",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsyncJobsGlobalLockWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultAsyncJobAcquireWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultQueueSizeFullWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimerJobAcquireWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getGlobalAcquireLockPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getLockOwner",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAsyncJobsDuePerAcquisition",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxTimerJobsPerAcquisition",
        "parameterTypes": [ ]
      },
      {
        "name": "getMoveTimerExecutorPoolSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getResetExpiredJobsInterval",
        "parameterTypes": [ ]
      },
      {
        "name": "getResetExpiredJobsPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getResetExpiredRunnableName",
        "parameterTypes": [ ]
      },
      {
        "name": "getTenantId",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimerLockForceAcquireAfter",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimerLockPollRate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimerLockTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimerLockWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "isAsyncJobAcquisitionEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isGlobalAcquireLockEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isResetExpiredJobEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isTimerJobAcquisitionEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isTimerRunnableNeeded",
        "parameterTypes": [ ]
      },
      {
        "name": "isUnlockOwnedJobs",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcquireRunnableThreadName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAsyncJobAcquisitionEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAsyncJobLockTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAsyncJobLockTimeInMillis",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAsyncJobsGlobalLockForceAcquireAfter",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAsyncJobsGlobalLockPollRate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setAsyncJobsGlobalLockWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDefaultAsyncJobAcquireWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDefaultAsyncJobAcquireWaitTimeInMillis",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDefaultQueueSizeFullWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDefaultQueueSizeFullWaitTimeInMillis",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setDefaultTimerJobAcquireWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDefaultTimerJobAcquireWaitTimeInMillis",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setGlobalAcquireLockEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setGlobalAcquireLockPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockOwner",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxAsyncJobsDuePerAcquisition",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxTimerJobsPerAcquisition",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMoveTimerExecutorPoolSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setResetExpiredJobEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResetExpiredJobsInterval",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setResetExpiredJobsPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setResetExpiredRunnableName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTenantId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimerJobAcquisitionEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setTimerLockForceAcquireAfter",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTimerLockPollRate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTimerLockTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTimerLockTimeInMillis",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimerLockWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTimerRunnableNeeded",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUnlockOwnedJobs",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.AbstractEngineAutoConfiguration",
    "queriedMethods": [
      {
        "name": "setResourcePatternResolver",
        "parameterTypes": [
          "org.springframework.core.io.support.ResourcePatternResolver"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.actuate.endpoint.ProcessEngineEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "invoke",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.actuate.info.FlowableInfoAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "flowableInfoContributor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.actuate.info.FlowableInfoContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.spring.boot.app.AppEngineAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.flowable.spring.boot.FlowableProperties",
          "org.flowable.spring.boot.app.FlowableAppProperties",
          "org.flowable.spring.boot.idm.FlowableIdmProperties",
          "org.flowable.spring.boot.eventregistry.FlowableEventRegistryProperties",
          "org.flowable.spring.boot.FlowableAutoDeploymentProperties"
        ]
      },
      {
        "name": "springAppEngineConfiguration",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.transaction.PlatformTransactionManager",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.app.AppEngineServicesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "appEngine",
        "parameterTypes": [
          "org.flowable.app.spring.SpringAppEngineConfiguration"
        ]
      },
      {
        "name": "appManagementServiceBean",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      },
      {
        "name": "appRepositoryServiceBean",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.app.FlowableAppProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceSuffixes",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "isDeployResources",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeployResources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResourceLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.BaseEngineConfigurationWithConfigurers",
    "queriedMethods": [
      {
        "name": "setEngineConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.cmmn.CmmnEngineAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.flowable.spring.boot.FlowableProperties",
          "org.flowable.spring.boot.cmmn.FlowableCmmnProperties",
          "org.flowable.spring.boot.idm.FlowableIdmProperties",
          "org.flowable.spring.boot.eventregistry.FlowableEventRegistryProperties",
          "org.flowable.spring.boot.FlowableMailProperties",
          "org.flowable.spring.boot.FlowableHttpProperties",
          "org.flowable.spring.boot.FlowableAutoDeploymentProperties"
        ]
      },
      {
        "name": "cmmnAsyncExecutor",
        "parameterTypes": [
          "org.flowable.job.service.impl.asyncexecutor.AsyncJobExecutorConfiguration",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "cmmnAsyncExecutorConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "cmmnEngineConfiguration",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.transaction.PlatformTransactionManager",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.cmmn.CmmnEngineAutoConfiguration$CmmnEngineAppConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "cmmnAppEngineConfigurationConfigurer",
        "parameterTypes": [
          "org.flowable.cmmn.engine.configurator.CmmnEngineConfigurator"
        ]
      },
      {
        "name": "cmmnEngineConfigurator",
        "parameterTypes": [
          "org.flowable.cmmn.spring.SpringCmmnEngineConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.cmmn.CmmnEngineServicesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "cmmnHistoryService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      },
      {
        "name": "cmmnManagementService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      },
      {
        "name": "cmmnMigrationService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      },
      {
        "name": "cmmnRepositoryService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      },
      {
        "name": "cmmnRuntimeService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      },
      {
        "name": "cmmnTaskService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      },
      {
        "name": "dynamicCmmnService",
        "parameterTypes": [
          "org.flowable.cmmn.engine.CmmnEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.cmmn.CmmnEngineServicesAutoConfiguration$AlreadyInitializedAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "cmmnEngine",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.cmmn.FlowableCmmnProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeploymentName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEventRegistryUniqueCaseInstanceStartLockTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceSuffixes",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "isDeployResources",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSafeXml",
        "parameterTypes": [ ]
      },
      {
        "name": "isEventRegistryStartCaseInstanceAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "isEventRegistryUniqueCaseInstanceCheckWithLock",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeploymentName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeployResources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableSafeXml",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEventRegistryStartCaseInstanceAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEventRegistryUniqueCaseInstanceCheckWithLock",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEventRegistryUniqueCaseInstanceStartLockTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setResourceLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.dmn.DmnEngineAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.flowable.spring.boot.FlowableProperties",
          "org.flowable.spring.boot.dmn.FlowableDmnProperties",
          "org.flowable.spring.boot.FlowableAutoDeploymentProperties"
        ]
      },
      {
        "name": "dmnEngineConfiguration",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.transaction.PlatformTransactionManager",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.dmn.DmnEngineAutoConfiguration$DmnEngineAppConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dmnAppEngineConfigurationConfigurer",
        "parameterTypes": [
          "org.flowable.dmn.engine.configurator.DmnEngineConfigurator"
        ]
      },
      {
        "name": "dmnEngineConfigurator",
        "parameterTypes": [
          "org.flowable.dmn.spring.SpringDmnEngineConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.dmn.DmnEngineServicesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dmnHistoryService",
        "parameterTypes": [
          "org.flowable.dmn.engine.DmnEngine"
        ]
      },
      {
        "name": "dmnManagementService",
        "parameterTypes": [
          "org.flowable.dmn.engine.DmnEngine"
        ]
      },
      {
        "name": "dmnRepositoryService",
        "parameterTypes": [
          "org.flowable.dmn.engine.DmnEngine"
        ]
      },
      {
        "name": "dmnRuleService",
        "parameterTypes": [
          "org.flowable.dmn.engine.DmnEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.dmn.DmnEngineServicesAutoConfiguration$AlreadyInitializedAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dmnEngine",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.dmn.FlowableDmnProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeploymentName",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceSuffixes",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "isDeployResources",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSafeXml",
        "parameterTypes": [ ]
      },
      {
        "name": "isHistoryEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isStrictMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setDeploymentName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeployResources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableSafeXml",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHistoryEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResourceLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setStrictMode",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.EndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "processEngineEndpoint",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.EngineConfigurationConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.spring.boot.environment.FlowableDefaultPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.spring.boot.environment.FlowableLiquibaseEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.spring.boot.eventregistry.EventRegistryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.flowable.spring.boot.FlowableProperties",
          "org.flowable.spring.boot.eventregistry.FlowableEventRegistryProperties",
          "org.flowable.spring.boot.FlowableAutoDeploymentProperties"
        ]
      },
      {
        "name": "eventEngineConfiguration",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.transaction.PlatformTransactionManager",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.eventregistry.EventRegistryAutoConfiguration$EventRegistryAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eventAppEngineConfigurationConfigurer",
        "parameterTypes": [
          "org.flowable.eventregistry.impl.configurator.EventRegistryEngineConfigurator"
        ]
      },
      {
        "name": "eventEngineConfigurator",
        "parameterTypes": [
          "org.flowable.eventregistry.spring.SpringEventRegistryEngineConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.eventregistry.EventRegistryServicesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eventManagementService",
        "parameterTypes": [
          "org.flowable.eventregistry.impl.EventRegistryEngine"
        ]
      },
      {
        "name": "eventRegistry",
        "parameterTypes": [
          "org.flowable.eventregistry.impl.EventRegistryEngine"
        ]
      },
      {
        "name": "eventRepositoryService",
        "parameterTypes": [
          "org.flowable.eventregistry.impl.EventRegistryEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.eventregistry.EventRegistryServicesAutoConfiguration$AlreadyInitializedAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "eventRegistryEngine",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.eventregistry.FlowableEventRegistryProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getChangeDetectionDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getChangeDetectionInitialDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeploymentName",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceSuffixes",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "isDeployResources",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableChangeDetection",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setChangeDetectionDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setChangeDetectionInitialDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDeploymentName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDeployResources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableChangeDetection",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResourceLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setResourceSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableAutoDeploymentProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEngine",
        "parameterTypes": [ ]
      },
      {
        "name": "getLockName",
        "parameterTypes": [ ]
      },
      {
        "name": "getLockWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "isThrowExceptionOnDeploymentFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLock",
        "parameterTypes": [ ]
      },
      {
        "name": "setEngine",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setLockName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setThrowExceptionOnDeploymentFailure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseLock",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableAutoDeploymentProperties$EngineDeploymentProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLockName",
        "parameterTypes": [ ]
      },
      {
        "name": "getLockWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getThrowExceptionOnDeploymentFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "getUseLock",
        "parameterTypes": [ ]
      },
      {
        "name": "setLockName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setThrowExceptionOnDeploymentFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setUseLock",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableHttpProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestRetryLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocketTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "isDisableCertVerify",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseSystemProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDisableCertVerify",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestRetryLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSocketTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseSystemProperties",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableJobConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "flowableAsyncTaskInvokerTaskExecutor",
        "parameterTypes": [
          "org.flowable.common.engine.impl.async.AsyncTaskExecutorConfiguration"
        ]
      },
      {
        "name": "flowableAsyncTaskInvokerTaskExecutorConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "taskExecutor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableMailProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultFrom",
        "parameterTypes": [ ]
      },
      {
        "name": "getForceTo",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getSSLPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseTls",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setDefaultFrom",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setForceTo",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSSLPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUseSsl",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseTls",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getActivityFontName",
        "parameterTypes": [ ]
      },
      {
        "name": "getAnnotationFontName",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomMybatisMappers",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomMybatisXMLMappers",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabaseSchema",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabaseSchemaUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeploymentName",
        "parameterTypes": [ ]
      },
      {
        "name": "getHistoryCleaningAfter",
        "parameterTypes": [ ]
      },
      {
        "name": "getHistoryCleaningBatchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getHistoryCleaningCycle",
        "parameterTypes": [ ]
      },
      {
        "name": "getHistoryLevel",
        "parameterTypes": [ ]
      },
      {
        "name": "getLabelFontName",
        "parameterTypes": [ ]
      },
      {
        "name": "getLockPollRate",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessDefinitionLocationPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessDefinitionLocationSuffixes",
        "parameterTypes": [ ]
      },
      {
        "name": "getRestApiMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getRestApiServletName",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchemaLockWaitTime",
        "parameterTypes": [ ]
      },
      {
        "name": "isAsyncExecutorActivate",
        "parameterTypes": [ ]
      },
      {
        "name": "isAsyncHistoryExecutorActivate",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckProcessDefinitions",
        "parameterTypes": [ ]
      },
      {
        "name": "isDbHistoryUsed",
        "parameterTypes": [ ]
      },
      {
        "name": "isDbIdentityUsed",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableHistoryCleaning",
        "parameterTypes": [ ]
      },
      {
        "name": "isFormFieldValidationEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isJpaEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRestApiEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLockForDatabaseSchemaUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "setActivityFontName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAnnotationFontName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setAsyncExecutorActivate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAsyncHistoryExecutorActivate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckProcessDefinitions",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomMybatisMappers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setCustomMybatisXMLMappers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setDatabaseSchema",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDatabaseSchemaUpdate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDbHistoryUsed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDbIdentityUsed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDeploymentName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnableHistoryCleaning",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFormFieldValidationEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setHistoryCleaningAfter",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setHistoryCleaningAfterDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHistoryCleaningBatchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHistoryCleaningCycle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHistoryLevel",
        "parameterTypes": [
          "org.flowable.common.engine.impl.history.HistoryLevel"
        ]
      },
      {
        "name": "setJpaEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLabelFontName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLockPollRate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setProcessDefinitionLocationPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProcessDefinitionLocationSuffixes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRestApiEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRestApiMapping",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRestApiServletName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLockWaitTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLockForDatabaseSchemaUpdate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableSecurityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableSecurityAutoConfiguration$SpringSecurityAuthenticationContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.FlowableServlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.idm.FlowableIdmProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPasswordEncoder",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPasswordEncoder",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.idm.IdmEngineAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.flowable.spring.boot.FlowableProperties",
          "org.flowable.spring.boot.idm.FlowableIdmProperties"
        ]
      },
      {
        "name": "idmEngineConfiguration",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.idm.IdmEngineAutoConfiguration$IdmEngineAppConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "idmAppEngineConfigurationConfigurer",
        "parameterTypes": [
          "org.flowable.idm.engine.configurator.IdmEngineConfigurator"
        ]
      },
      {
        "name": "idmEngineConfigurator",
        "parameterTypes": [
          "org.flowable.idm.spring.SpringIdmEngineConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.idm.IdmEngineAutoConfiguration$PasswordEncoderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "passwordEncoderIdmEngineConfigurationConfigurer",
        "parameterTypes": [
          "org.springframework.security.crypto.password.PasswordEncoder"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.idm.IdmEngineServicesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "idmIdentityService",
        "parameterTypes": [
          "org.flowable.idm.engine.IdmEngine"
        ]
      },
      {
        "name": "idmManagementService",
        "parameterTypes": [
          "org.flowable.idm.engine.IdmEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.idm.IdmEngineServicesAutoConfiguration$AlreadyInitializedAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "idmEngine",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.liquibase.LiquibaseXmlElementClassNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.flowable.spring.boot.process.FlowableProcessProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefinitionCacheLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "getEventRegistryUniqueProcessInstanceStartLockTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableProcessDefinitionHistoryLevel",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnableSafeXml",
        "parameterTypes": [ ]
      },
      {
        "name": "isEventRegistryStartProcessInstanceAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "isEventRegistryUniqueProcessInstanceCheckWithLock",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefinitionCacheLimit",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setEnableProcessDefinitionHistoryLevel",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnableSafeXml",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEventRegistryStartProcessInstanceAsync",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEventRegistryUniqueProcessInstanceCheckWithLock",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEventRegistryUniqueProcessInstanceStartLockTime",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.ProcessEngineAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.flowable.spring.boot.FlowableProperties",
          "org.flowable.spring.boot.process.FlowableProcessProperties",
          "org.flowable.spring.boot.app.FlowableAppProperties",
          "org.flowable.spring.boot.idm.FlowableIdmProperties",
          "org.flowable.spring.boot.eventregistry.FlowableEventRegistryProperties",
          "org.flowable.spring.boot.FlowableMailProperties",
          "org.flowable.spring.boot.FlowableHttpProperties",
          "org.flowable.spring.boot.FlowableAutoDeploymentProperties"
        ]
      },
      {
        "name": "processAsyncExecutor",
        "parameterTypes": [
          "org.flowable.job.service.impl.asyncexecutor.AsyncJobExecutorConfiguration",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "processAsyncExecutorConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "springProcessEngineConfiguration",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.transaction.PlatformTransactionManager",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.ProcessEngineAutoConfiguration$ProcessEngineAppConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "processAppEngineConfigurationConfigurer",
        "parameterTypes": [
          "org.flowable.engine.configurator.ProcessEngineConfigurator"
        ]
      },
      {
        "name": "processEngineConfigurator",
        "parameterTypes": [
          "org.flowable.spring.SpringProcessEngineConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.ProcessEngineServicesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dynamicBpmnServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "formServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "historyServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "identityServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "managementServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "processInstanceMigrationService",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "repositoryServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "runtimeServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      },
      {
        "name": "taskServiceBean",
        "parameterTypes": [
          "org.flowable.engine.ProcessEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.boot.ProcessEngineServicesAutoConfiguration$AlreadyInitializedAppEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "processEngine",
        "parameterTypes": [
          "org.flowable.app.engine.AppEngine"
        ]
      }
    ]
  },
  {
    "name": "org.flowable.spring.job.service.SpringAsyncExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.flowable.spring.SpringProcessEngineConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.mybatis.spring.boot.autoconfigure.MybatisProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.mybatis.spring.boot.autoconfigure.MybatisProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.core.io.ResourceLoader",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$SpringCGLIB$$FastClass$$0",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$SpringCGLIB$$FastClass$$1",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisLanguageDriverAutoConfiguration$$SpringCGLIB$$0",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.boot.autoconfigure.MybatisProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfiguration",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfigurationProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultScriptingLanguageDriver",
        "parameterTypes": [ ]
      },
      {
        "name": "getExecutorType",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapperLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeAliasesPackage",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeAliasesSuperType",
        "parameterTypes": [ ]
      },
      {
        "name": "getTypeHandlersPackage",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckConfigLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setCheckConfigLocation",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConfigLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConfiguration",
        "parameterTypes": [
          "org.apache.ibatis.session.Configuration"
        ]
      },
      {
        "name": "setConfigurationProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setDefaultScriptingLanguageDriver",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setExecutorType",
        "parameterTypes": [
          "org.apache.ibatis.session.ExecutorType"
        ]
      },
      {
        "name": "setMapperLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setTypeAliasesPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTypeAliasesSuperType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setTypeHandlersPackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.mapper.MapperFactoryBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setAddToConfig",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapperInterface",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.mapper.MapperScannerConfigurer",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setBasePackage",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProcessPropertyPlaceHolders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.mybatis.spring.SqlSessionTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.reactivestreams.Publisher"
  },
  {
    "name": "org.redisson.api.RedissonClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.redisson.api.RedissonReactiveClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.redisson.api.RedissonRxClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.redisson.spring.cache.RedissonCacheStatisticsAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.redisson.spring.data.connection.RedissonConnectionFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.redisson.spring.starter.RedissonAutoConfiguration",
    "allDeclaredConstructors": true,
    "fields": [
      {
        "name": "ctx"
      },
      {
        "name": "redisProperties"
      },
      {
        "name": "redissonAutoConfigurationCustomizers"
      },
      {
        "name": "redissonProperties"
      }
    ],
    "queriedMethods": [
      {
        "name": "redisson",
        "parameterTypes": [ ]
      },
      {
        "name": "redissonConnectionFactory",
        "parameterTypes": [
          "org.redisson.api.RedissonClient"
        ]
      },
      {
        "name": "redissonReactive",
        "parameterTypes": [
          "org.redisson.api.RedissonClient"
        ]
      },
      {
        "name": "redissonRxJava",
        "parameterTypes": [
          "org.redisson.api.RedissonClient"
        ]
      },
      {
        "name": "redisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.RedisConnectionFactory"
        ]
      },
      {
        "name": "stringRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.RedisConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.redisson.spring.starter.RedissonAutoConfigurationV2",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.redisson.spring.starter.RedissonProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConfig",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      },
      {
        "name": "setConfig",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFile",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.slf4j.bridge.SLF4JBridgeHandler"
  },
  {
    "name": "org.springframework.aop.Advisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.AbstractAdvisingBeanPostProcessor",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.AopInfrastructureBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.autoproxy.AbstractBeanFactoryAwareAdvisingPostProcessor",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.aop.framework.ProxyConfig",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setExposeProxy",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setProxyTargetClass",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.framework.ProxyProcessorSupport",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.PointcutAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.aop.support.AbstractPointcutAdvisor",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.aop.support.DefaultPointcutAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.BeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.beans.factory.Aware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanClassLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactory",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanFactoryAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.BeanNameAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanFactoryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.BeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.DestructionAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.InstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.Scope",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.config.SmartInstantiationAwareBeanPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.DisposableBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.FactoryBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.InitializingBean",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.SmartInitializingSingleton",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.BeanDefinitionRegistryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.beans.factory.support.MergedBeanDefinitionPostProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.audit.AuditEventsEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.availability.AvailabilityHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.beans.BeansEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "beansEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.cache.CachesEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "cachesEndpoint",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "cachesEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.cache.CachesEndpoint"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "conditions",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ConditionsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$ContextConditionsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getExclusions",
        "parameterTypes": [ ]
      },
      {
        "name": "getNegativeMatches",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentId",
        "parameterTypes": [ ]
      },
      {
        "name": "getPositiveMatches",
        "parameterTypes": [ ]
      },
      {
        "name": "getUnconditionalClasses",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$MessageAndConditionDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCondition",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessage",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpoint$MessageAndConditionsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMatched",
        "parameterTypes": [ ]
      },
      {
        "name": "getNotMatched",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.condition.ConditionsReportEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "conditionsReportEndpoint",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesReportEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "configurationPropertiesReportEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
          "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.properties.ConfigurationPropertiesReportEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowValues",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowValues",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.context.ShutdownEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "shutdownEndpoint",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.data.redis.RedisHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.data.redis.RedisReactiveHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "redisHealthContributor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "endpointCachingOperationInvokerAdvisor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      },
      {
        "name": "endpointOperationParameterMapper",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.expose.IncludeExcludeEndpointFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.jackson.JacksonEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "endpointObjectMapper",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowCredentials",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedOriginPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllowedOrigins",
        "parameterTypes": [ ]
      },
      {
        "name": "getExposedHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCredentials",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setAllowedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedMethods",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedOriginPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setAllowedOrigins",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setExposedHeaders",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "controllerEndpointHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "endpointObjectMapperWebMvcConfigurer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper"
        ]
      },
      {
        "name": "webEndpointServletHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.CorsEndpointProperties",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.servlet.WebMvcEndpointManagementContextConfiguration$EndpointObjectMapperWebMvcConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletExposeExcludePropertyEndpointFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.ServletEndpointManagementContextConfiguration$WebMvcServletEndpointManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletEndpointRegistrar",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
          "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "controllerEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "controllerExposeExcludePropertyEndpointFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "endpointMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "pathMappedEndpoints",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "webEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
          "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webEndpointPathMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "webExposeExcludePropertyEndpointFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointAutoConfiguration$WebEndpointServletConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletEndpointDiscoverer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getDiscovery",
        "parameterTypes": [ ]
      },
      {
        "name": "getExposure",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Discovery",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties$Exposure",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getInclude",
        "parameterTypes": [ ]
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "environmentEndpoint",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "environmentEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.env.EnvironmentEndpoint",
          "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.env.EnvironmentEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowValues",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowValues",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "pingHealthContributor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "healthContributorRegistry",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "java.util.Map",
          "java.util.Map"
        ]
      },
      {
        "name": "healthEndpoint",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupMembershipValidator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
          "org.springframework.boot.actuate.health.HealthContributorRegistry"
        ]
      },
      {
        "name": "healthEndpointGroups",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthEndpointGroupsBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "healthHttpCodeStatusMapper",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      },
      {
        "name": "healthStatusAggregator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupMembershipValidator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointConfiguration$HealthEndpointGroupsBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGroup",
        "parameterTypes": [ ]
      },
      {
        "name": "getLogging",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Group",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getExclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getInclude",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setExclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setInclude",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowDetails",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties$Logging",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSlowIndicatorThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "setSlowIndicatorThreshold",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "healthEndpointWebExtension",
        "parameterTypes": [
          "org.springframework.boot.actuate.health.HealthContributorRegistry",
          "org.springframework.boot.actuate.health.HealthEndpointGroups",
          "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthEndpointWebExtensionConfiguration$MvcAdditionalHealthEndpointPathsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "healthEndpointWebMvcHandlerMapping",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties",
    "methods": [
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "getShowComponents",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setShowComponents",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.Show"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.HealthProperties$Status",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.NoSuchHealthContributorFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.health.ReactiveHealthEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveHealthContributorRegistry",
        "parameterTypes": [
          "java.util.Map",
          "java.util.Map",
          "org.springframework.boot.actuate.health.HealthEndpointGroups"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoContributorProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.actuate.info.InfoPropertiesInfoContributor$Mode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.info.InfoEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "infoEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "dbHealthContributor",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.jdbc.DataSourceHealthIndicatorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isIgnoreRoutingDataSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setIgnoreRoutingDataSources",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.liquibase.LiquibaseEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LogFileWebEndpointProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getExternalFile",
        "parameterTypes": [ ]
      },
      {
        "name": "setExternalFile",
        "parameterTypes": [
          "java.io.File"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.logging.LoggersEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "loggersEndpoint",
        "parameterTypes": [
          "org.springframework.boot.logging.LoggingSystem",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.HeapDumpWebEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "heapDumpWebEndpoint",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.management.ThreadDumpEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dumpEndpoint",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.AutoTimeProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPercentiles",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isPercentilesHistogram",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPercentiles",
        "parameterTypes": [
          "double[]"
        ]
      },
      {
        "name": "setPercentilesHistogram",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.CompositeMeterRegistryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.MetricsRepositoryMethodInvocationListenerBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.data.RepositoryMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListener",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider"
        ]
      },
      {
        "name": "metricsRepositoryMethodInvocationListenerBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "repositoryTagsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleMetricsExportAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleConfig",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties"
        ]
      },
      {
        "name": "simpleMeterRegistry",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.SimpleConfig",
          "io.micrometer.core.instrument.Clock"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.export.simple.SimpleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getStep",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "io.micrometer.core.instrument.simple.CountingMode"
        ]
      },
      {
        "name": "setStep",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.integration.IntegrationMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourcePoolMetadataMeterBinder",
        "parameterTypes": [
          "java.util.Map",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$DataSourcePoolMetadataMetricsConfiguration$DataSourcePoolMetadataMeterBinder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariDataSourceMeterBinder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.jdbc.DataSourcePoolMetricsAutoConfiguration$HikariDataSourceMetricsConfiguration$HikariDataSourceMeterBinder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.JvmMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "classLoaderMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmCompilationMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmGcMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmHeapPressureMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmInfoMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmMemoryMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "jvmThreadMetrics",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.LogbackMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "logbackMetrics",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MeterRegistryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "meterRegistryCloser",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "meterRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "micrometerClock",
        "parameterTypes": [ ]
      },
      {
        "name": "propertiesMeterFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsAutoConfiguration$MeterRegistryCloser",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsEndpoint",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getData",
        "parameterTypes": [ ]
      },
      {
        "name": "getDistribution",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSystem",
        "parameterTypes": [ ]
      },
      {
        "name": "getTags",
        "parameterTypes": [ ]
      },
      {
        "name": "getWeb",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseGlobalRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "setUseGlobalRegistry",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRepository",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Data$Repository",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAutotime",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetricName",
        "parameterTypes": [ ]
      },
      {
        "name": "setMetricName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Distribution",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getExpiry",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaximumExpectedValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinimumExpectedValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getPercentiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getPercentilesHistogram",
        "parameterTypes": [ ]
      },
      {
        "name": "getSlo",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDiskspace",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$System$Diskspace",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClient",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties$Web$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxUriTags",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxUriTags",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.PropertiesMeterFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ServiceLevelObjectiveBoundary",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MeterValue"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.startup.StartupTimeMetricsListenerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "startupTimeMetrics",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "diskSpaceMetrics",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      },
      {
        "name": "fileDescriptorMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "processorMetrics",
        "parameterTypes": [ ]
      },
      {
        "name": "uptimeMetrics",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.task.TaskExecutorMetricsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "bindTaskExecutorsToRegistry",
        "parameterTypes": [
          "java.util.Map",
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      },
      {
        "name": "eagerTaskExecutorMetrics",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.metrics.ValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRegistry",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRegistryPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "propertiesObservationFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$MeterObservationHandlerConfiguration$OnlyMetricsMeterObservationHandlerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultMeterObservationHandler",
        "parameterTypes": [
          "io.micrometer.core.instrument.MeterRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$ObservedAspectConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observedAspect",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationAutoConfiguration$OnlyMetricsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsObservationHandlerGrouping",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationHandlerGrouping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnable",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyValues",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnable",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setKeyValues",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClient",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequests",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Client$ClientRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequests",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties$Http$Server$ServerRequests",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.ObservationRegistryPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.PropertiesObservationFilterPredicate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.HttpClientObservationsAutoConfiguration$MeterFilterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsHttpClientUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestClientObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRestClientCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.RestTemplateObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observationRestTemplateCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.client.WebClientObservationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observationWebClientCustomizer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webMvcObservationFilter",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.observation.web.servlet.WebMvcObservationAutoConfiguration$MeterFilterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "metricsHttpServerUriTagFilter",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.observation.ObservationProperties",
          "org.springframework.boot.actuate.autoconfigure.metrics.MetricsProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "scheduledTasksEndpoint",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "observabilitySchedulingConfigurer",
        "parameterTypes": [
          "io.micrometer.observation.ObservationRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.scheduling.ScheduledTasksObservabilityAutoConfiguration$ObservabilitySchedulingConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.security.servlet.SecurityRequestMatchersManagementContextConfiguration$MvcRequestMatcherConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "requestMatcherProvider",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthContributorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "diskSpaceHealthIndicator",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.system.DiskSpaceHealthIndicatorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.tracing.LogCorrelationEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.exchanges.HttpExchangesEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.ManagementContextFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingsEndpoint",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "filterMappingDescriptionProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "servletMappingDescriptionProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.mappings.MappingsEndpointAutoConfiguration$ServletWebConfiguration$SpringMvcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletMappingDescriptionProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementContextAutoConfiguration$SameManagementContextConfiguration$EnableSameManagementContextConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.server.ManagementServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasePath",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setBasePath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ManagementServletContext",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.autoconfigure.web.servlet.ServletManagementContextAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "managementServletContext",
        "parameterTypes": [
          "org.springframework.boot.actuate.autoconfigure.endpoint.web.WebEndpointProperties"
        ]
      },
      {
        "name": "servletWebChildContextFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "beans",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$BeanDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAliases",
        "parameterTypes": [ ]
      },
      {
        "name": "getDependencies",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getScope",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$BeansDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.beans.BeansEndpoint$ContextBeansDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBeans",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "caches",
        "parameterTypes": [ ]
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearCaches",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTarget",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheEntryDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCacheManager",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CacheManagerDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCaches",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpoint$CachesDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCacheManagers",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.cache.CachesEndpointWebExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "cache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      },
      {
        "name": "clearCache",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configurationProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesWithPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesBeanDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInputs",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ConfigurationPropertiesDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpoint$ContextConfigurationPropertiesDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getBeans",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.properties.ConfigurationPropertiesReportEndpointWebExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configurationProperties",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      },
      {
        "name": "configurationPropertiesWithPrefix",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.ShutdownEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.context.ShutdownEndpoint$ShutdownDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMessage",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.EndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.OperationInvokerAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.jackson.EndpointObjectMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointDiscoverer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ControllerEndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointDiscoverer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.ServletEndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointDiscoverer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.annotation.WebEndpointFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.EndpointMediaTypes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.Link",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHref",
        "parameterTypes": [ ]
      },
      {
        "name": "isTemplated",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMappedEndpoints",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.PathMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler",
    "methods": [
      {
        "name": "handle",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.AdditionalHealthEndpointPathsWebMvcHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.ControllerEndpointHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping$WebMvcLinksHandler",
    "methods": [
      {
        "name": "links",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.ServletEndpointRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.endpoint.web.WebEndpointsSupplier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "environment",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "environmentEntry",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getActiveProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertySources",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$EnvironmentEntryDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getActiveProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperty",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertySources",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySourceEntryDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperty",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertySummaryDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getSource",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpoint$PropertyValueDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getOrigin",
        "parameterTypes": [ ]
      },
      {
        "name": "getOriginParents",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.env.EnvironmentEndpointWebExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "environment",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String"
        ]
      },
      {
        "name": "environmentEntry",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getComponents",
        "parameterTypes": [ ]
      },
      {
        "name": "getDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeHealthContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.CompositeReactiveHealthContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ContributorRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.Health",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthComponent",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthContributorRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": [ ]
      },
      {
        "name": "healthForPath",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointGroups",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthEndpointWebExtension",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext"
        ]
      },
      {
        "name": "health",
        "parameterTypes": [
          "org.springframework.boot.actuate.endpoint.ApiVersion",
          "org.springframework.boot.actuate.endpoint.web.WebServerNamespace",
          "org.springframework.boot.actuate.endpoint.SecurityContext",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.HealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.HttpCodeStatusMapper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.NamedContributors",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.PingHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.Status",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCode",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.health.StatusAggregator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.health.SystemHealth",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.info.InfoEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "info",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "configureLogLevel",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.boot.logging.LogLevel"
        ]
      },
      {
        "name": "loggerLevels",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "loggers",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$GroupLoggerLevelsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMembers",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggerLevelsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConfiguredLevel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$LoggersDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getGroups",
        "parameterTypes": [ ]
      },
      {
        "name": "getLevels",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoggers",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.logging.LoggersEndpoint$SingleLoggerLevelsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getEffectiveLevel",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.HeapDumpWebEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "heapDump",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "textThreadDump",
        "parameterTypes": [ ]
      },
      {
        "name": "threadDump",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.management.ThreadDumpEndpoint$ThreadDumpDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.DefaultRepositoryTagsProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.MetricsRepositoryMethodInvocationListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.data.RepositoryTagsProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "listNames",
        "parameterTypes": [ ]
      },
      {
        "name": "metric",
        "parameterTypes": [
          "java.lang.String",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$AvailableTag",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTag",
        "parameterTypes": [ ]
      },
      {
        "name": "getValues",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getAvailableTags",
        "parameterTypes": [ ]
      },
      {
        "name": "getBaseUnit",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "getMeasurements",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$MetricNamesDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getNames",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.MetricsEndpoint$Sample",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getStatistic",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.metrics.startup.StartupTimeMetricsListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.system.DiskSpaceMetricsBinder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.client.ObservationRestTemplateCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.metrics.web.reactive.client.ObservationWebClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "scheduledTasks",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$CronTaskDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getExpression",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$CustomTriggerTaskDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTrigger",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$FixedDelayTaskDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$FixedRateTaskDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$IntervalTaskDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getInitialDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getInterval",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$RunnableDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getTarget",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$ScheduledTasksDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getCron",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustom",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixedDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixedRate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.scheduling.ScheduledTasksEndpoint$TaskDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getRunnable",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.system.DiskSpaceHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.HandlerMethodDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getDescriptor",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingDescriptionProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "mappings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ApplicationMappingsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getContexts",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.MappingsEndpoint$ContextMappingsDescriptor",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getParentId",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletMappingDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getPredicate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletMappingDetails",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getHandlerMethod",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestMappingConditions",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.DispatcherServletsMappingDescriptionProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FilterRegistrationMappingDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getServletNameMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlPatternMappings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.FiltersMappingDescriptionProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RegistrationMappingDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RequestMappingConditionsDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getConsumes",
        "parameterTypes": [ ]
      },
      {
        "name": "getHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMethods",
        "parameterTypes": [ ]
      },
      {
        "name": "getParams",
        "parameterTypes": [ ]
      },
      {
        "name": "getPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getProduces",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RequestMappingConditionsDescription$MediaTypeExpressionDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMediaType",
        "parameterTypes": [ ]
      },
      {
        "name": "isNegated",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.RequestMappingConditionsDescription$NameValueExpressionDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getValue",
        "parameterTypes": [ ]
      },
      {
        "name": "isNegated",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletRegistrationMappingDescription",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getMappings",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.actuate.web.mappings.servlet.ServletsMappingDescriptionProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ApplicationRunner",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$AspectJAutoProxyingConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportFilter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.AutoConfigurationPackages$BasePackages",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.availability.ApplicationAvailabilityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "applicationAvailability",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.BackgroundPreinitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.batch.JobRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.codec.CodecProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInMemorySize",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxInMemorySize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.ConditionEvaluationReportAutoConfigurationImportListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnBeanCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnClassCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.condition.OnWebApplicationCondition",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultLifecycleProcessor",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.context.LifecycleProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.LifecycleProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeoutPerShutdownPhase",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeoutPerShutdownPhase",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.context.PropertyPlaceholderAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "propertySourcesPlaceholderConfigurer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "persistenceExceptionTranslationPostProcessor",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.PropertiesRedisConnectionDetails",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "redisConnectionDetails",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientName",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientType",
        "parameterTypes": [ ]
      },
      {
        "name": "getCluster",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatabase",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getJedis",
        "parameterTypes": [ ]
      },
      {
        "name": "getLettuce",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getSentinel",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setClientName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setClientType",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties$ClientType"
        ]
      },
      {
        "name": "setCluster",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster"
        ]
      },
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setDatabase",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSentinel",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Cluster",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "getNodes",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaxRedirects",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNodes",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Jedis",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCluster",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdownTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdownTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRefresh",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Lettuce$Cluster$Refresh",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAdaptive",
        "parameterTypes": [ ]
      },
      {
        "name": "isDynamicRefreshSources",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdaptive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDynamicRefreshSources",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxActive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxWait",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinIdle",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeBetweenEvictionRuns",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxActive",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxWait",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMinIdle",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setTimeBetweenEvictionRuns",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Sentinel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaster",
        "parameterTypes": [ ]
      },
      {
        "name": "getNodes",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "setMaster",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setNodes",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisProperties$Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisReactiveAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "reactiveStringRedisTemplate",
        "parameterTypes": [
          "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisRepositoriesAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.redis.RedisUrlSyntaxFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties"
        ]
      },
      {
        "name": "pageableCustomizer",
        "parameterTypes": [ ]
      },
      {
        "name": "sortCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageable",
        "parameterTypes": [ ]
      },
      {
        "name": "getSort",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Pageable",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxPageSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getPageParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getQualifierDelimiter",
        "parameterTypes": [ ]
      },
      {
        "name": "getSizeParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "isOneIndexedParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxPageSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setOneIndexedParameters",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPageParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setQualifierDelimiter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSizeParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.data.web.SpringDataWebProperties$Sort",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSortParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setSortParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.diagnostics.analyzer.NoSuchBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.EnableAutoConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.flyway.FlywayMigrationInitializerDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.freemarker.FreeMarkerTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.groovy.template.GroovyTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$DefaultCodecsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultCodecCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.codec.CodecProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.codec.CodecsAutoConfiguration$JacksonCodecConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonCodecCustomizer",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConverters",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "messageConverters",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "stringHttpMessageConverter",
        "parameterTypes": [
          "org.springframework.core.env.Environment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "mappingJackson2HttpMessageConverter",
        "parameterTypes": [
          "com.fasterxml.jackson.databind.ObjectMapper"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.info.ProjectInfoProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBuild",
        "parameterTypes": [ ]
      },
      {
        "name": "getGit",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Build",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.info.ProjectInfoProperties$Git",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.integration.IntegrationPropertiesEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.Jackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonComponentModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "standardJacksonObjectMapperBuilderCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration$StandardJackson2ObjectMapperBuilderCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonMixinConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jsonMixinModule",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.jackson.JsonMixinModuleEntries"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapperBuilder",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonObjectMapper",
        "parameterTypes": [
          "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$ParameterNamesModuleConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "parameterNamesModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConstructorDetector",
        "parameterTypes": [ ]
      },
      {
        "name": "getDatatype",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultLeniency",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultPropertyInclusion",
        "parameterTypes": [ ]
      },
      {
        "name": "getDeserialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getGenerator",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapper",
        "parameterTypes": [ ]
      },
      {
        "name": "getParser",
        "parameterTypes": [ ]
      },
      {
        "name": "getPropertyNamingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getSerialization",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeZone",
        "parameterTypes": [ ]
      },
      {
        "name": "getVisibility",
        "parameterTypes": [ ]
      },
      {
        "name": "setConstructorDetector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jackson.JacksonProperties$ConstructorDetectorStrategy"
        ]
      },
      {
        "name": "setDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultLeniency",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDefaultPropertyInclusion",
        "parameterTypes": [
          "com.fasterxml.jackson.annotation.JsonInclude$Include"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setPropertyNamingStrategy",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTimeZone",
        "parameterTypes": [
          "java.util.TimeZone"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jackson.JacksonProperties$Datatype",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnum",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsonNode",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getDriverClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getEmbeddedDatabaseConnection",
        "parameterTypes": [ ]
      },
      {
        "name": "getJndiName",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "getXa",
        "parameterTypes": [ ]
      },
      {
        "name": "isGenerateUniqueName",
        "parameterTypes": [ ]
      },
      {
        "name": "setBeanClassLoader",
        "parameterTypes": [
          "java.lang.ClassLoader"
        ]
      },
      {
        "name": "setDriverClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEmbeddedDatabaseConnection",
        "parameterTypes": [
          "org.springframework.boot.jdbc.EmbeddedDatabaseConnection"
        ]
      },
      {
        "name": "setGenerateUniqueName",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setJndiName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setUrl",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setXa",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceProperties$Xa",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataSourceClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setDataSourceClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$JdbcTransactionManagerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionManager",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "javax.sql.DataSource",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.HikariDriverConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcClient",
        "parameterTypes": [
          "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getTemplate",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcProperties$Template",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFetchSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRows",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueryTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setFetchSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxRows",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueryTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.JdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jdbcTemplate",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.jdbc.JdbcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$HikariPoolDataSourceMetadataProviderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "hikariPoolDataSourceMetadataProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jdbc.NamedParameterJdbcTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "namedParameterJdbcTemplate",
        "parameterTypes": [
          "org.springframework.jdbc.core.JdbcTemplate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.jooq.NoDslContextBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.mustache.MustacheTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.netty.NettyProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLeakDetection",
        "parameterTypes": [ ]
      },
      {
        "name": "setLeakDetection",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.netty.NettyProperties$LeakDetection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.quartz.SchedulerDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.ConnectionFactoryBeanCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MissingR2dbcPoolDependencyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.MultipleConnectionPoolConfigurationsFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.r2dbc.NoConnectionFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyConfigurations$ReactorResourceFactoryConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorResourceFactory",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.netty.ReactorNettyProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdownQuietPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setShutdownQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.reactor.ReactorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPropagation",
        "parameterTypes": [ ]
      },
      {
        "name": "setContextPropagation",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.reactor.ReactorProperties$ContextPropagationMode"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.reactive.ReactiveSecurityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "getUser",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$Filter",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDispatcherTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.SecurityProperties$User",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getRoles",
        "parameterTypes": [ ]
      },
      {
        "name": "isPasswordGenerated",
        "parameterTypes": [ ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRoles",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.RequestMatcherProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationEventPublisher",
        "parameterTypes": [
          "org.springframework.context.ApplicationEventPublisher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "securityFilterChainRegistration",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.security.SecurityProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.service.connection.ConnectionDetails",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.session.JdbcIndexedSessionRepositoryDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.SharedMetadataReaderFactoryContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.DataSourceInitializationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dataSourceScriptDatabaseInitializer",
        "parameterTypes": [
          "javax.sql.DataSource",
          "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlDataSourceScriptDatabaseInitializer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.sql.init.SqlInitializationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDataLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getMode",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getPlatform",
        "parameterTypes": [ ]
      },
      {
        "name": "getSchemaLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "getSeparator",
        "parameterTypes": [ ]
      },
      {
        "name": "getUsername",
        "parameterTypes": [ ]
      },
      {
        "name": "isContinueOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setContinueOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDataLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setMode",
        "parameterTypes": [
          "org.springframework.boot.sql.init.DatabaseInitializationMode"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPlatform",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSchemaLocations",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setSeparator",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUsername",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.FileWatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.JksSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeystore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTruststore",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.PemSslBundleProperties$Store",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrivateKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isVerifyKeys",
        "parameterTypes": [ ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrivateKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setVerifyKeys",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.SslProperties"
        ]
      },
      {
        "name": "fileWatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "sslBundleRegistry",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "sslPropertiesSslBundleRegistrar",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.ssl.FileWatcher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties",
    "methods": [
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "isReloadOnUpdate",
        "parameterTypes": [ ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setReloadOnUpdate",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Key",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleProperties$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslBundleRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getJks",
        "parameterTypes": [ ]
      },
      {
        "name": "getPem",
        "parameterTypes": [ ]
      },
      {
        "name": "getWatch",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getFile",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslProperties$Bundles$Watch$File",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getQuietPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "setQuietPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.ssl.SslPropertiesBundleRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCoreSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCoreThreadTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCoreThreadTimeout",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCoreSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxSize",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setQueueCapacity",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutionProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$SimpleAsyncTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskExecutorBuilderVirtualThreads",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$TaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskExecutorConfigurations$ThreadPoolTaskExecutorBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskExecutorBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskExecutionProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "scheduledBeanLazyInitializationExcludeFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$SimpleAsyncTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "simpleAsyncTaskSchedulerBuilderVirtualThreads",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$TaskSchedulerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "taskSchedulerVirtualThreads",
        "parameterTypes": [
          "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingConfigurations$ThreadPoolTaskSchedulerBuilderConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "threadPoolTaskSchedulerBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPool",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSimple",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreadNamePrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setThreadNamePrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Pool",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setSize",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Shutdown",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAwaitTerminationPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAwaitTermination",
        "parameterTypes": [ ]
      },
      {
        "name": "setAwaitTermination",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAwaitTerminationPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.task.TaskSchedulingProperties$Simple",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConcurrencyLimit",
        "parameterTypes": [ ]
      },
      {
        "name": "setConcurrencyLimit",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.template.TemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.thymeleaf.ThymeleafTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.ExecutionListenersTransactionManagerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$EnableTransactionManagementConfiguration$CglibAutoProxyConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration$TransactionTemplateConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionTemplate",
        "parameterTypes": [
          "org.springframework.transaction.PlatformTransactionManager"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "platformTransactionManagerCustomizers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "transactionExecutionListeners",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionManagerCustomizers",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.transaction.TransactionProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getRollbackOnCommitFailure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setRollbackOnCommitFailure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.AutoConfiguredRestClientSsl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.HttpMessageConvertersRestClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpMessageConvertersRestClientCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer"
        ]
      },
      {
        "name": "restClientBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "restClientSsl",
        "parameterTypes": [
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientBuilderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestClientSsl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "restTemplateBuilder",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer"
        ]
      },
      {
        "name": "restTemplateBuilderConfigurer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.client.RestTemplateBuilderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$NettyWebServerFactoryCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "nettyWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.EmbeddedWebServerFactoryCustomizerAutoConfiguration$UndertowWebServerFactoryCustomizerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "undertowWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.core.env.Environment",
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.NettyWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.embedded.UndertowWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeBindingErrors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeMessage",
        "parameterTypes": [ ]
      },
      {
        "name": "getIncludeStacktrace",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getWhitelabel",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeException",
        "parameterTypes": [ ]
      },
      {
        "name": "setIncludeBindingErrors",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeMessage",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setIncludeStacktrace",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ErrorProperties$IncludeAttribute"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ErrorProperties$Whitelabel",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.AutoConfiguredWebClientSsl",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webClientHttpConnector",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory"
        ]
      },
      {
        "name": "webClientHttpConnectorCustomizer",
        "parameterTypes": [
          "org.springframework.http.client.reactive.ClientHttpConnector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactoryConfiguration$ReactorNetty",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactorClientHttpConnectorFactory",
        "parameterTypes": [
          "org.springframework.http.client.ReactorResourceFactory",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.ReactorClientHttpConnectorFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "webClientBuilder",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "webClientSsl",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.reactive.function.client.ClientHttpConnectorFactory",
          "org.springframework.boot.ssl.SslBundles"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientAutoConfiguration$WebClientCodecsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "exchangeStrategiesCustomizer",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientCodecCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.reactive.function.client.WebClientSsl",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompression",
        "parameterTypes": [ ]
      },
      {
        "name": "getError",
        "parameterTypes": [ ]
      },
      {
        "name": "getForwardHeadersStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttp2",
        "parameterTypes": [ ]
      },
      {
        "name": "getJetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpRequestHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getNetty",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getReactive",
        "parameterTypes": [ ]
      },
      {
        "name": "getServerHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getShutdown",
        "parameterTypes": [ ]
      },
      {
        "name": "getSsl",
        "parameterTypes": [ ]
      },
      {
        "name": "getTomcat",
        "parameterTypes": [ ]
      },
      {
        "name": "getUndertow",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddress",
        "parameterTypes": [
          "java.net.InetAddress"
        ]
      },
      {
        "name": "setForwardHeadersStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$ForwardHeadersStrategy"
        ]
      },
      {
        "name": "setMaxHttpRequestHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setServerHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShutdown",
        "parameterTypes": [
          "org.springframework.boot.web.server.Shutdown"
        ]
      },
      {
        "name": "setSsl",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCustomFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getFilename",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnorePaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getRetentionPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isAppend",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setAppend",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCustomFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFilename",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFormat",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Accesslog$FORMAT"
        ]
      },
      {
        "name": "setIgnorePaths",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRetentionPeriod",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Jetty$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptors",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxQueueCapacity",
        "parameterTypes": [ ]
      },
      {
        "name": "getMin",
        "parameterTypes": [ ]
      },
      {
        "name": "getSelectors",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxQueueCapacity",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMin",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setSelectors",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Netty",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getH2cMaxContentLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getIdleTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitialBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxInitialLineLength",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "isValidateHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setH2cMaxContentLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setIdleTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setInitialBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxInitialLineLength",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setValidateHeaders",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Reactive$Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationDisplayName",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getContextPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getJsp",
        "parameterTypes": [ ]
      },
      {
        "name": "getSession",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterDefaultServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationDisplayName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setContextPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRegisterDefaultServlet",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAcceptCount",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalTldSkipPatterns",
        "parameterTypes": [ ]
      },
      {
        "name": "getBackgroundProcessorDelay",
        "parameterTypes": [ ]
      },
      {
        "name": "getBasedir",
        "parameterTypes": [ ]
      },
      {
        "name": "getConnectionTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeepAliveTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxConnections",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpFormPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpResponseHeaderSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxKeepAliveRequests",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxSwallowSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMbeanregistry",
        "parameterTypes": [ ]
      },
      {
        "name": "getProcessorCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getRedirectContextRoot",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedPathChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRelaxedQueryChars",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteip",
        "parameterTypes": [ ]
      },
      {
        "name": "getResource",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUriEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "isRejectIllegalHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseRelativeRedirects",
        "parameterTypes": [ ]
      },
      {
        "name": "setAcceptCount",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setAdditionalTldSkipPatterns",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setBackgroundProcessorDelay",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setBasedir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setConnectionTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setKeepAliveTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMaxConnections",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpFormPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxHttpResponseHeaderSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxKeepAliveRequests",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxSwallowSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setProcessorCache",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setRedirectContextRoot",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setRejectIllegalHeader",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRelaxedPathChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setRelaxedQueryChars",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setUriEncoding",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setUseRelativeRedirects",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionIf",
        "parameterTypes": [ ]
      },
      {
        "name": "getConditionUnless",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getEncoding",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileDateFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxDays",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isBuffered",
        "parameterTypes": [ ]
      },
      {
        "name": "isCheckExists",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isIpv6Canonical",
        "parameterTypes": [ ]
      },
      {
        "name": "isRenameOnRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "isRequestAttributesEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setBuffered",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCheckExists",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setConditionIf",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setConditionUnless",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDirectory",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEncoding",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setFileDateFormat",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIpv6Canonical",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxDays",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRenameOnRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRequestAttributesEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Mbeanregistry",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Remoteip",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHostHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getInternalProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "getPortHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocolHeaderHttpsValue",
        "parameterTypes": [ ]
      },
      {
        "name": "getRemoteIpHeader",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustedProxies",
        "parameterTypes": [ ]
      },
      {
        "name": "setHostHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInternalProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPortHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocolHeaderHttpsValue",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRemoteIpHeader",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustedProxies",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Resource",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCacheTtl",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowCaching",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowCaching",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCacheTtl",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Tomcat$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMax",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinSpare",
        "parameterTypes": [ ]
      },
      {
        "name": "setMax",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMinSpare",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAccesslog",
        "parameterTypes": [ ]
      },
      {
        "name": "getBufferSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getDecodeSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "getDirectBuffers",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxCookies",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHeaders",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxHttpPostSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getOptions",
        "parameterTypes": [ ]
      },
      {
        "name": "getThreads",
        "parameterTypes": [ ]
      },
      {
        "name": "getUrlCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "isAllowEncodedSlash",
        "parameterTypes": [ ]
      },
      {
        "name": "isAlwaysSetKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "isDecodeUrl",
        "parameterTypes": [ ]
      },
      {
        "name": "isEagerFilterInit",
        "parameterTypes": [ ]
      },
      {
        "name": "isPreservePathOnForward",
        "parameterTypes": [ ]
      },
      {
        "name": "setAllowEncodedSlash",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAlwaysSetKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setBufferSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setDecodeSlash",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDecodeUrl",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setDirectBuffers",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setEagerFilterInit",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMaxCookies",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setMaxHeaders",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setMaxHttpPostSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxParameters",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setNoRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setPreservePathOnForward",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUrlCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Accesslog",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isRotate",
        "parameterTypes": [ ]
      },
      {
        "name": "setDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setRotate",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Options",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getServer",
        "parameterTypes": [ ]
      },
      {
        "name": "getSocket",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.ServerProperties$Undertow$Threads",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getIo",
        "parameterTypes": [ ]
      },
      {
        "name": "getWorker",
        "parameterTypes": [ ]
      },
      {
        "name": "setIo",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      },
      {
        "name": "setWorker",
        "parameterTypes": [
          "java.lang.Integer"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServlet",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletAutoConfiguration$DispatcherServletRegistrationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "dispatcherServletRegistration",
        "parameterTypes": [
          "org.springframework.web.servlet.DispatcherServlet",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "error",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      },
      {
        "name": "errorHtml",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest",
          "jakarta.servlet.http.HttpServletResponse"
        ]
      },
      {
        "name": "mediaTypeNotAcceptable",
        "parameterTypes": [
          "jakarta.servlet.http.HttpServletRequest"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.DefaultErrorViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "basicErrorController",
        "parameterTypes": [
          "org.springframework.boot.web.servlet.error.ErrorAttributes",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "errorAttributes",
        "parameterTypes": [ ]
      },
      {
        "name": "errorPageCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.DispatcherServletPath"
        ]
      },
      {
        "name": "preserveErrorControllerTargetClassPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$DefaultErrorViewResolverConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.boot.autoconfigure.web.WebProperties"
        ]
      },
      {
        "name": "conventionErrorViewResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$ErrorPageCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$PreserveErrorControllerTargetClassPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "beanNameViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultErrorView",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.error.ErrorViewResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "characterEncodingFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "localeCharsetMappingsCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.HttpEncodingAutoConfiguration$LocaleCharsetMappingsCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.JspTemplateAvailabilityProvider",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties"
        ]
      },
      {
        "name": "multipartConfigElement",
        "parameterTypes": [ ]
      },
      {
        "name": "multipartResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.MultipartProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getFileSizeThreshold",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxFileSize",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxRequestSize",
        "parameterTypes": [ ]
      },
      {
        "name": "isResolveLazily",
        "parameterTypes": [ ]
      },
      {
        "name": "isStrictServletCompliance",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFileSizeThreshold",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setMaxFileSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setMaxRequestSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      },
      {
        "name": "setResolveLazily",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStrictServletCompliance",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "servletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryConfiguration$EmbeddedUndertow",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "undertowServletWebServerFactory",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "undertowServletWebServerFactoryCustomizer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.ServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.UndertowServletWebServerFactoryCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "formContentFilter",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$EnableWebMvcConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ListableBeanFactory"
        ]
      },
      {
        "name": "flashMapManager",
        "parameterTypes": [ ]
      },
      {
        "name": "localeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcContentNegotiationManager",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcConversionService",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcValidator",
        "parameterTypes": [ ]
      },
      {
        "name": "themeResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "welcomePageHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "welcomePageNotAcceptableHandlerMapping",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties",
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
          "org.springframework.beans.factory.ListableBeanFactory",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.beans.factory.ObjectProvider"
        ]
      },
      {
        "name": "defaultViewResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "requestContextFilter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewResolver",
        "parameterTypes": [
          "org.springframework.beans.factory.BeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAsync",
        "parameterTypes": [ ]
      },
      {
        "name": "getContentnegotiation",
        "parameterTypes": [ ]
      },
      {
        "name": "getFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getMessageCodesResolverFormat",
        "parameterTypes": [ ]
      },
      {
        "name": "getPathmatch",
        "parameterTypes": [ ]
      },
      {
        "name": "getProblemdetails",
        "parameterTypes": [ ]
      },
      {
        "name": "getServlet",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "getView",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebjarsPathPattern",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchOptionsRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isDispatchTraceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogRequestDetails",
        "parameterTypes": [ ]
      },
      {
        "name": "isLogResolvedException",
        "parameterTypes": [ ]
      },
      {
        "name": "isPublishRequestHandledEvents",
        "parameterTypes": [ ]
      },
      {
        "name": "isThrowExceptionIfNoHandlerFound",
        "parameterTypes": [ ]
      },
      {
        "name": "setDispatchOptionsRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setDispatchTraceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogRequestDetails",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLogResolvedException",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMessageCodesResolverFormat",
        "parameterTypes": [
          "org.springframework.validation.DefaultMessageCodesResolver$Format"
        ]
      },
      {
        "name": "setPublishRequestHandledEvents",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setThrowExceptionIfNoHandlerFound",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setWebjarsPathPattern",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Async",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getRequestTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "setRequestTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Contentnegotiation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMediaTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameterName",
        "parameterTypes": [ ]
      },
      {
        "name": "isFavorParameter",
        "parameterTypes": [ ]
      },
      {
        "name": "setFavorParameter",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMediaTypes",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setParameterName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Format",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDate",
        "parameterTypes": [ ]
      },
      {
        "name": "getDateTime",
        "parameterTypes": [ ]
      },
      {
        "name": "getTime",
        "parameterTypes": [ ]
      },
      {
        "name": "setDate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDateTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTime",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Pathmatch",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getMatchingStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "setMatchingStrategy",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$MatchingStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Problemdetails",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$Servlet",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLoadOnStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "getServletPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "setLoadOnStartup",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WebMvcProperties$View",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "setPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSuffix",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.servlet.WelcomePageNotAcceptableHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocale",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocaleResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "getResources",
        "parameterTypes": [ ]
      },
      {
        "name": "setLocale",
        "parameterTypes": [
          "java.util.Locale"
        ]
      },
      {
        "name": "setLocaleResolver",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.WebProperties$LocaleResolver"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getChain",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaticLocations",
        "parameterTypes": [ ]
      },
      {
        "name": "isAddMappings",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddMappings",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStaticLocations",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachecontrol",
        "parameterTypes": [ ]
      },
      {
        "name": "getPeriod",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseLastModified",
        "parameterTypes": [ ]
      },
      {
        "name": "setPeriod",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setUseLastModified",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Cache$Cachecontrol",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePrivate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCachePublic",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getMustRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoCache",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getNoTransform",
        "parameterTypes": [ ]
      },
      {
        "name": "getProxyRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "getSMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleIfError",
        "parameterTypes": [ ]
      },
      {
        "name": "getStaleWhileRevalidate",
        "parameterTypes": [ ]
      },
      {
        "name": "setCachePrivate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setCachePublic",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setMustRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoCache",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoStore",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setNoTransform",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setProxyRevalidate",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setSMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleIfError",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setStaleWhileRevalidate",
        "parameterTypes": [
          "java.time.Duration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getStrategy",
        "parameterTypes": [ ]
      },
      {
        "name": "isCache",
        "parameterTypes": [ ]
      },
      {
        "name": "isCompressed",
        "parameterTypes": [ ]
      },
      {
        "name": "setCache",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setCompressed",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getContent",
        "parameterTypes": [ ]
      },
      {
        "name": "getFixed",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Content",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.web.WebProperties$Resources$Chain$Strategy$Fixed",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getPaths",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setPaths",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setVersion",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.UndertowWebSocketServletWebServerCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.autoconfigure.websocket.servlet.WebSocketServletAutoConfiguration$UndertowWebSocketConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "websocketServletWebServerCustomizer",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailability",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.availability.ApplicationAvailabilityBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.BootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.builder.ParentContextCloserApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ClearCachesApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.cloud.CloudFoundryVcapEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.AnsiOutputApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocation",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "boolean",
          "java.lang.String",
          "org.springframework.boot.origin.Origin"
        ]
      },
      {
        "name": "of",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataNotFoundFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List",
          "org.springframework.boot.context.config.ConfigDataProperties$Activate"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigDataProperties$Activate",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.boot.cloud.CloudPlatform",
          "java.lang.String[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.ConfigTreeConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.DelegatingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.config.StandardConfigDataLocationResolver",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ConfigurationWarningsApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.ContextIdApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.event.EventPublishingRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.FileEncodingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.logging.LoggingApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.BoundConfigurationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBinder$ConfigurationPropertiesBinderFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindHandlerAdvisor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.context.properties.IncompatibleConfigurationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.context.properties.NotConstructorBoundInjectionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanCurrentlyInCreationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanDefinitionOverrideFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BeanNotOfRequiredTypeFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.BindValidationFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyNameFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.InvalidConfigurationPropertyValueFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MissingParameterNamesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.MutuallyExclusiveConfigurationPropertiesFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoSuchMethodFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.NoUniqueBeanDefinitionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PatternParseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.PortInUseFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.UnboundConfigurationPropertyFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.analyzer.ValidationExceptionFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.FailureAnalyzers",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.EnvironmentPostProcessorApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertiesPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.PropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.RandomValuePropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SpringApplicationJsonEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.env.YamlPropertySourceLoader",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.flyway.FlywayDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonComponentModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jackson.JsonMixinModuleEntries",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.init.DataSourceScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jdbc.metadata.DataSourcePoolMetadataProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.jdbc.SpringJdbcDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.jooq.JooqDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.LazyInitializationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseChangelogMissingFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.liquibase.LiquibaseDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.java.JavaLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.log4j2.Log4J2LoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ApplicationNameConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ColorConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.CorrelationIdConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.ExtendedWhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.LogbackLoggingSystem$Factory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.logback.WhitespaceThrowableProxyConverter",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LoggingSystemFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.logging.LogLevel",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.orm.jpa.JpaDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.r2dbc.init.R2dbcScriptDatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.reactor.ReactorEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.rsocket.context.RSocketPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.Runner",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.SpringApplication",
    "methods": [
      {
        "name": "getAdditionalProfiles",
        "parameterTypes": [ ]
      },
      {
        "name": "getAllSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getApplicationStartup",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnvironmentPrefix",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitializers",
        "parameterTypes": [ ]
      },
      {
        "name": "getListeners",
        "parameterTypes": [ ]
      },
      {
        "name": "getMainApplicationClass",
        "parameterTypes": [ ]
      },
      {
        "name": "getResourceLoader",
        "parameterTypes": [ ]
      },
      {
        "name": "getSources",
        "parameterTypes": [ ]
      },
      {
        "name": "getSpringBootExceptionHandler",
        "parameterTypes": [ ]
      },
      {
        "name": "getWebApplicationType",
        "parameterTypes": [ ]
      },
      {
        "name": "isKeepAlive",
        "parameterTypes": [ ]
      },
      {
        "name": "setAddCommandLineProperties",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAddConversionService",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAdditionalProfiles",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setAllowBeanDefinitionOverriding",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setAllowCircularReferences",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setApplicationContextFactory",
        "parameterTypes": [
          "org.springframework.boot.ApplicationContextFactory"
        ]
      },
      {
        "name": "setApplicationStartup",
        "parameterTypes": [
          "org.springframework.core.metrics.ApplicationStartup"
        ]
      },
      {
        "name": "setBanner",
        "parameterTypes": [
          "org.springframework.boot.Banner"
        ]
      },
      {
        "name": "setBannerMode",
        "parameterTypes": [
          "org.springframework.boot.Banner$Mode"
        ]
      },
      {
        "name": "setBeanNameGenerator",
        "parameterTypes": [
          "org.springframework.beans.factory.support.BeanNameGenerator"
        ]
      },
      {
        "name": "setDefaultProperties",
        "parameterTypes": [
          "java.util.Properties"
        ]
      },
      {
        "name": "setEnvironment",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      },
      {
        "name": "setEnvironmentPrefix",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHeadless",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitializers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setKeepAlive",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setLazyInitialization",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setListeners",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setLogStartupInfo",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMainApplicationClass",
        "parameterTypes": [
          "java.lang.Class"
        ]
      },
      {
        "name": "setRegisterShutdownHook",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setResourceLoader",
        "parameterTypes": [
          "org.springframework.core.io.ResourceLoader"
        ]
      },
      {
        "name": "setSources",
        "parameterTypes": [
          "java.util.Set"
        ]
      },
      {
        "name": "setWebApplicationType",
        "parameterTypes": [
          "org.springframework.boot.WebApplicationType"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.SpringApplicationRunListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.SpringBootExceptionReporter",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.AnnotationDependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializationDependencyConfigurer$DependsOnDatabaseInitializationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DatabaseInitializerDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.sql.init.dependency.DependsOnDatabaseInitializationDetector",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.ssl.DefaultSslBundleRegistry",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundleRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.ssl.SslBundles",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.SimpleAsyncTaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.TaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskExecutorBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.task.ThreadPoolTaskSchedulerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.validation.beanvalidation.MethodValidationExcludeFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "byAnnotation",
        "parameterTypes": [
          "java.lang.Class"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.client.RestClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.client.RestTemplateCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.codec.CodecCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.context.MissingWebServerFactoryBeanFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.context.ServerPortInfoApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.tomcat.ConnectorStartFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.embedded.undertow.ConfigurableUndertowWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.embedded.undertow.UndertowServletWebServerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.reactive.function.client.WebClientCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Compression",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getExcludedUserAgents",
        "parameterTypes": [ ]
      },
      {
        "name": "getMimeTypes",
        "parameterTypes": [ ]
      },
      {
        "name": "getMinResponseSize",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setExcludedUserAgents",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMimeTypes",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setMinResponseSize",
        "parameterTypes": [
          "org.springframework.util.unit.DataSize"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ConfigurableWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDomain",
        "parameterTypes": [ ]
      },
      {
        "name": "getHttpOnly",
        "parameterTypes": [ ]
      },
      {
        "name": "getMaxAge",
        "parameterTypes": [ ]
      },
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getPath",
        "parameterTypes": [ ]
      },
      {
        "name": "getSameSite",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setDomain",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setHttpOnly",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      },
      {
        "name": "setMaxAge",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPath",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSameSite",
        "parameterTypes": [
          "org.springframework.boot.web.server.Cookie$SameSite"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "java.lang.Boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrar",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistrarBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.ErrorPageRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.Http2",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.Ssl",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getBundle",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getCiphers",
        "parameterTypes": [ ]
      },
      {
        "name": "getClientAuth",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabledProtocols",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "getProtocol",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificate",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustCertificatePrivateKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStorePassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrustStoreType",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setBundle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setCiphers",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setClientAuth",
        "parameterTypes": [
          "org.springframework.boot.web.server.Ssl$ClientAuth"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setEnabledProtocols",
        "parameterTypes": [
          "java.lang.String[]"
        ]
      },
      {
        "name": "setKeyAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setProtocol",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificate",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustCertificatePrivateKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStore",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStorePassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreProvider",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setTrustStoreType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.server.WebServerFactoryCustomizerBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.AbstractFilterRegistrationBean",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setDispatcherTypes",
        "parameterTypes": [
          "java.util.EnumSet"
        ]
      },
      {
        "name": "setServletNames",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "setUrlPatterns",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.context.ServletWebServerApplicationContextFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.DispatcherType",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.DynamicRegistrationBean",
    "allDeclaredFields": true,
    "methods": [
      {
        "name": "setAsyncSupported",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setName",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.error.DefaultErrorAttributes",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorAttributes",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.error.ErrorController",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFilter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.FilterRegistrationBean",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "setFilter",
        "parameterTypes": [
          "jakarta.servlet.Filter"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ConfigurableServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Encoding",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "isForce",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceRequest",
        "parameterTypes": [ ]
      },
      {
        "name": "isForceResponse",
        "parameterTypes": [ ]
      },
      {
        "name": "setCharset",
        "parameterTypes": [
          "java.nio.charset.Charset"
        ]
      },
      {
        "name": "setForce",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceRequest",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setForceResponse",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setMapping",
        "parameterTypes": [
          "java.util.Map"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Jsp",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getClassName",
        "parameterTypes": [ ]
      },
      {
        "name": "getInitParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getRegistered",
        "parameterTypes": [ ]
      },
      {
        "name": "setClassName",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInitParameters",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setRegistered",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.ServletWebServerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCookie",
        "parameterTypes": [ ]
      },
      {
        "name": "getSessionStoreDirectory",
        "parameterTypes": [ ]
      },
      {
        "name": "getStoreDir",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeout",
        "parameterTypes": [ ]
      },
      {
        "name": "getTrackingModes",
        "parameterTypes": [ ]
      },
      {
        "name": "isPersistent",
        "parameterTypes": [ ]
      },
      {
        "name": "setPersistent",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setStoreDir",
        "parameterTypes": [
          "java.io.File"
        ]
      },
      {
        "name": "setTimeout",
        "parameterTypes": [
          "java.time.Duration"
        ]
      },
      {
        "name": "setTrackingModes",
        "parameterTypes": [
          "java.util.Set"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.server.Session$Cookie",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.boot.web.servlet.ServletContextInitializer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.boot.web.servlet.WebListenerRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesBeans",
        "parameterTypes": [ ]
      },
      {
        "name": "configurationPropertiesRebinder",
        "parameterTypes": [
          "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.LifecycleMvcEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "environmentManager",
        "parameterTypes": [
          "org.springframework.core.env.ConfigurableEnvironment"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.PauseResumeEndpointsConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "configDataContextRefresher",
        "parameterTypes": [
          "org.springframework.context.ConfigurableApplicationContext",
          "org.springframework.cloud.context.scope.refresh.RefreshScope",
          "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties"
        ]
      },
      {
        "name": "loggingRebinder",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshEventListener",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      },
      {
        "name": "refreshScope",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshScopeLifecycle",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAdditionalPropertySourcesToRetain",
        "parameterTypes": [ ]
      },
      {
        "name": "setAdditionalPropertySourcesToRetain",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshAutoConfiguration$RefreshScopeBeanDefinitionEnhancer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshScopeHealthIndicator",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RefreshEndpointAutoConfiguration$RefreshEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "refreshEndpoint",
        "parameterTypes": [
          "org.springframework.cloud.context.refresh.ContextRefresher"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.autoconfigure.RestartEndpointWithoutIntegrationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfigFileApplicationListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.BootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.DecryptEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.EncryptionBootstrapConfiguration",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getKey",
        "parameterTypes": [ ]
      },
      {
        "name": "getKeyStore",
        "parameterTypes": [ ]
      },
      {
        "name": "getSalt",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailOnError",
        "parameterTypes": [ ]
      },
      {
        "name": "setFailOnError",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setKey",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setKeyStore",
        "parameterTypes": [
          "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore"
        ]
      },
      {
        "name": "setSalt",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.encrypt.KeyProperties$KeyStore",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getAlias",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocation",
        "parameterTypes": [ ]
      },
      {
        "name": "getPassword",
        "parameterTypes": [ ]
      },
      {
        "name": "getSecret",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setAlias",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setLocation",
        "parameterTypes": [
          "org.springframework.core.io.Resource"
        ]
      },
      {
        "name": "setPassword",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setSecret",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.bootstrap.LoggingSystemShutdownListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.RefreshBootstrapRegistryInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.bootstrap.TextEncryptorConfigBootstrapper",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.actuator.FeaturesEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "features",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.actuator.FeaturesEndpoint$Feature",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getName",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "getVendor",
        "parameterTypes": [ ]
      },
      {
        "name": "getVersion",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.actuator.FeaturesEndpoint$Features",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDisabled",
        "parameterTypes": [ ]
      },
      {
        "name": "getEnabled",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.actuator.HasFeatures",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$ActuatorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "hasFeatures"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "featuresEndpoint",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.CommonsClientAutoConfiguration$DiscoveryLoadBalancerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "discoveryClientHealthIndicator",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider",
          "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties"
        ]
      },
      {
        "name": "discoveryCompositeHealthContributor",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "springCloudCommonsFeatures",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.DefaultServiceInstance",
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getHost",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstanceId",
        "parameterTypes": [ ]
      },
      {
        "name": "getMetadata",
        "parameterTypes": [ ]
      },
      {
        "name": "getPort",
        "parameterTypes": [ ]
      },
      {
        "name": "getServiceId",
        "parameterTypes": [ ]
      },
      {
        "name": "getUri",
        "parameterTypes": [ ]
      },
      {
        "name": "isSecure",
        "parameterTypes": [ ]
      },
      {
        "name": "setHost",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstanceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setPort",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setSecure",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setServiceId",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setUri",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "compositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.composite.reactive.ReactiveCompositeDiscoveryClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveCompositeDiscoveryClient",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.DiscoveryClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isIncludeDescription",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseServicesQuery",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setIncludeDescription",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setUseServicesQuery",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryCompositeHealthContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryClientHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryCompositeHealthContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.ReactiveDiscoveryClient",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "inet"
      },
      {
        "name": "server"
      },
      {
        "name": "serviceId"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleReactiveDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties"
        ]
      },
      {
        "name": "simpleReactiveDiscoveryProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClientAutoConfiguration$HealthConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "simpleReactiveDiscoveryClientHealthIndicator",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.health.DiscoveryClientHealthIndicatorProperties",
          "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryClient"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.reactive.SimpleReactiveDiscoveryProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocal",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstances",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "setInet",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtils"
        ]
      },
      {
        "name": "setServer",
        "parameterTypes": [
          "org.springframework.boot.autoconfigure.web.ServerProperties"
        ]
      },
      {
        "name": "simpleDiscoveryClient",
        "parameterTypes": [
          "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties"
        ]
      },
      {
        "name": "simpleDiscoveryProperties",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.discovery.simple.SimpleDiscoveryProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstances",
        "parameterTypes": [ ]
      },
      {
        "name": "getLocal",
        "parameterTypes": [ ]
      },
      {
        "name": "getOrder",
        "parameterTypes": [ ]
      },
      {
        "name": "setInstances",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setOrder",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.HostInfoEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.client.loadbalancer.LoadBalancerDefaultMappingsProviderAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "loadBalancerClientsDefaultsMappingsProvider",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ReactiveCommonsClientAutoConfiguration$ReactiveDiscoveryLoadBalancerConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveCommonsFeatures",
        "parameterTypes": [ ]
      },
      {
        "name": "reactiveDiscoveryClients",
        "parameterTypes": [
          "java.util.Collection"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.ServiceInstance",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AbstractAutoServiceRegistration",
    "methods": [
      {
        "name": "destroy",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "autoServiceRegistration"
      },
      {
        "name": "properties"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.AutoServiceRegistrationProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "isFailFast",
        "parameterTypes": [ ]
      },
      {
        "name": "isRegisterManagement",
        "parameterTypes": [ ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setFailFast",
        "parameterTypes": [
          "boolean"
        ]
      },
      {
        "name": "setRegisterManagement",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.Registration",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistry",
    "queryAllPublicMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration$ServiceRegistryEndpointConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "registration"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.cloud.client.serviceregistry.ServiceRegistryAutoConfiguration"
        ]
      },
      {
        "name": "serviceRegistryEndpoint",
        "parameterTypes": [
          "org.springframework.cloud.client.serviceregistry.ServiceRegistry"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.CommonsConfigAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "defaultsBindHandlerAdvisor",
        "parameterTypes": [
          "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider[]"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.config.DefaultsBindHandlerAdvisor$MappingsProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.security.ResourceServerTokenRelayAutoConfiguration$ResourceServerTokenRelayRegistrationAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtils",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.InetUtilsProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "timeoutSeconds"
      }
    ],
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultHostname",
        "parameterTypes": [ ]
      },
      {
        "name": "getDefaultIpAddress",
        "parameterTypes": [ ]
      },
      {
        "name": "getIgnoredInterfaces",
        "parameterTypes": [ ]
      },
      {
        "name": "getPreferredNetworks",
        "parameterTypes": [ ]
      },
      {
        "name": "getTimeoutSeconds",
        "parameterTypes": [ ]
      },
      {
        "name": "isUseOnlySiteLocalInterfaces",
        "parameterTypes": [ ]
      },
      {
        "name": "setDefaultHostname",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setDefaultIpAddress",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setIgnoredInterfaces",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setPreferredNetworks",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setTimeoutSeconds",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setUseOnlySiteLocalInterfaces",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.commons.util.UtilAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "inetUtils",
        "parameterTypes": [
          "org.springframework.cloud.commons.util.InetUtilsProperties"
        ]
      },
      {
        "name": "inetUtilsProperties",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityNotMetFailureAnalyzer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifier",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierAutoConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "compositeCompatibilityVerifier",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "sleuthPresentVerifier",
        "parameterTypes": [ ]
      },
      {
        "name": "springBootVersionVerifier",
        "parameterTypes": [
          "org.springframework.cloud.configuration.CompatibilityVerifierProperties"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompatibilityVerifierProperties",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "getCompatibleBootVersions",
        "parameterTypes": [ ]
      },
      {
        "name": "isEnabled",
        "parameterTypes": [ ]
      },
      {
        "name": "setCompatibleBootVersions",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setEnabled",
        "parameterTypes": [
          "boolean"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.configuration.CompositeCompatibilityVerifier",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.SleuthPresentVerifier",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.configuration.SpringBootVersionVerifier",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.environment.EnvironmentManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesBeans",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.refresh.ConfigDataContextRefresher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.refresh.RefreshScopeLifecycle",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.context.restart.RestartListener",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.cloud.context.scope.refresh.RefreshScope",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.endpoint.event.RefreshEventListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.endpoint.RefreshEndpoint",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "refresh",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.cloud.health.RefreshScopeHealthIndicator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.logging.LoggingRebinder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.cloud.util.random.CachedRandomPropertySourceEnvironmentPostProcessor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.annotation.ImportAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationContextInitializer",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.context.ApplicationEventPublisherAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ApplicationListener",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EmbeddedValueResolverAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.EnvironmentAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.DefaultEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.EventListenerFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.event.EventListenerMethodProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.context.event.SmartApplicationListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Lifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.LifecycleProcessor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.Phased",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.ResourceLoaderAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.SmartLifecycle",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.context.support.DefaultLifecycleProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.context.support.PropertySourcesPlaceholderConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.convert.ConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.converter.ConverterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.convert.support.ConfigurableConversionService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.env.EnvironmentCapable",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.InputStreamSource[]",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.core.io.ResourceEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.core.Ordered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.PriorityOrdered",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncListenableTaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.core.task.AsyncTaskExecutor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.core.task.TaskExecutor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.dao.support.PersistenceExceptionTranslator",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityReader",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.convert.EntityWriter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Example",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.domain.Unpaged",
    "condition": {
      "typeReachable": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule"
    }
  },
  {
    "name": "org.springframework.data.geo.GeoModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.annotation.KeySpace",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.AbstractKeyValueAdapter",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueAdapter",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueOperations",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.KeyValueTemplate",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.core.mapping.context.KeyValueMappingContext",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.config.QueryCreatorType",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.KeyValueRepository",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.query.KeyValuePartTreeQuery",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.KeyValueRepositoryFactoryBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.keyvalue.repository.support.SimpleKeyValueRepository",
    "allDeclaredConstructors": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.mapping.context.MappingContext",
    "queryAllPublicMethods": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.projection.SpelEvaluatingMethodInterceptor$TargetWrapper",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.DefaultedRedisClusterConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.DefaultedRedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.MessageListener",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterGeoCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterHashCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterHyperLogLogCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterKeyCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterListCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterScriptingCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterServerCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterStreamCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterStringCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveClusterZSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveGeoCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveHashCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveHyperLogLogCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveKeyCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveListCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactivePubSubCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveRedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveRedisConnectionFactory",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveScriptingCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveServerCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveStreamCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveStringCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.ReactiveZSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisClusterCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisConnectionFactory",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisGeoCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisHashCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisHyperLogLogCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisKeyCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisListCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisPubSubCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisScriptingCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisServerCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisStreamCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisStringCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisTxCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.RedisZSetCommands",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.connection.StringRedisConnection",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundGeoOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundHashOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundKeyOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundListOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundOperationsProxyFactory$DefaultBoundKeyOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundSetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundStreamOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundValueOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.BoundZSetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.KeyspaceConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.MappingConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
          "org.springframework.data.redis.core.convert.KeyspaceConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.MappingRedisConverter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setCustomConversions",
        "parameterTypes": [
          "org.springframework.data.convert.CustomConversions"
        ]
      },
      {
        "name": "setReferenceResolver",
        "parameterTypes": [
          "org.springframework.data.redis.core.convert.ReferenceResolver"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.mapping.RedisMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.RedisConverter",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.RedisCustomConversions",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.convert.ReferenceResolver",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.convert.ReferenceResolverImpl",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisOperations"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.DefaultGeoOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultHashOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultKeyOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultListOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultSetOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultStreamOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultValueOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.DefaultZSetOperations",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.GeoOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.HashOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.ConfigurableIndexDefinitionProvider",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexDefinitionProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.index.IndexDefinitionRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ListOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.mapping.RedisMappingContext",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.convert.MappingConfiguration"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveRedisOperations",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveRedisTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ReactiveStringRedisTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.RedisKeyValueAdapter",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "methods": [
      {
        "name": "setEnableKeyspaceEvents",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter$EnableKeyspaceEvents"
        ]
      },
      {
        "name": "setKeyspaceNotificationsConfigParameter",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setShadowCopy",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter$ShadowCopy"
        ]
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisOperations",
          "org.springframework.data.redis.core.convert.RedisConverter"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.RedisKeyValueTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.data.redis.core.RedisKeyValueAdapter",
          "org.springframework.data.redis.core.mapping.RedisMappingContext"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.redis.core.RedisOperations",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.RedisTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.SetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.StreamOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.StringRedisTemplate",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ValueOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.core.ZSetOperations",
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.listener.RedisMessageListenerContainer",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.repository.query.RedisPartTreeQuery",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.repository.query.RedisQueryCreator",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.redis.repository.support.RedisRepositoryFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.redis.repository.support.RedisRepositoryFactoryBean",
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.RepositoryMetadata",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFactorySupport",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragment",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryFragmentsFactoryBean",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.RepositoryMethodInvocationListener",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.core.support.TransactionalRepositoryFactoryBeanSupport",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$FetchableFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.FluentQuery$ReactiveFluentQuery",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.QueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.repository.query.ReactiveQueryByExampleExecutor",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.data.util.CustomCollectionRegistrar",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$EclipseCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.CustomCollections$VavrCollections",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.util.KotlinBeanInfoFactory",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.data.web.config.PageableHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "projectingArgumentResolverBeanPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.ProjectingArgumentResolverRegistrar$ProjectingArgumentResolverBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SortHandlerMethodArgumentResolverCustomizer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "jacksonGeoModule",
        "parameterTypes": [ ]
      },
      {
        "name": "pageModule",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonConfiguration$PageModule",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataJacksonModules",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.config.SpringDataWebConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext",
          "org.springframework.beans.factory.ObjectFactory"
        ]
      },
      {
        "name": "offsetResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "pageableResolver",
        "parameterTypes": [ ]
      },
      {
        "name": "sortResolver",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.OffsetScrollPositionHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.PageableHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.data.web.SortArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.data.web.SortHandlerMethodArgumentResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.format.FormatterRegistry",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.format.support.FormattingConversionService",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.AbstractClientHttpRequestFactoryWrapper",
    "fields": [
      {
        "name": "requestFactory"
      }
    ]
  },
  {
    "name": "org.springframework.http.client.reactive.ClientHttpConnector",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.ReactorResourceFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.client.SimpleClientHttpRequestFactory",
    "condition": {
      "typeReachable": "java.net.HttpURLConnection"
    },
    "methods": [
      {
        "name": "setConnectTimeout",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setReadTimeout",
        "parameterTypes": [
          "int"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.codec.support.DefaultClientCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.codec.support.DefaultServerCodecConfigurer",
    "condition": {
      "typeReachable": "org.springframework.http.codec.CodecConfigurerFactory"
    },
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.http.converter.GenericHttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.HttpMessageConverter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.Jackson2ObjectMapperBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.MappingJackson2HttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.converter.json.ProblemDetailJacksonMixin",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "setProperty",
        "parameterTypes": [
          "java.lang.String",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.converter.StringHttpMessageConverter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.http.HttpMethod",
    "methods": [
      {
        "name": "valueOf",
        "parameterTypes": [
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.http.HttpStatus",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true,
    "methods": [
      {
        "name": "getReasonPhrase",
        "parameterTypes": [ ]
      },
      {
        "name": "is1xxInformational",
        "parameterTypes": [ ]
      },
      {
        "name": "is2xxSuccessful",
        "parameterTypes": [ ]
      },
      {
        "name": "is3xxRedirection",
        "parameterTypes": [ ]
      },
      {
        "name": "is4xxClientError",
        "parameterTypes": [ ]
      },
      {
        "name": "is5xxServerError",
        "parameterTypes": [ ]
      },
      {
        "name": "isError",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaType",
    "methods": [
      {
        "name": "getQualityValue",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.http.MediaTypeEditor",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.http.ProblemDetail",
    "allDeclaredFields": true,
    "allDeclaredConstructors": true,
    "methods": [
      {
        "name": "getDetail",
        "parameterTypes": [ ]
      },
      {
        "name": "getInstance",
        "parameterTypes": [ ]
      },
      {
        "name": "getProperties",
        "parameterTypes": [ ]
      },
      {
        "name": "getStatus",
        "parameterTypes": [ ]
      },
      {
        "name": "getTitle",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "setDetail",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setInstance",
        "parameterTypes": [
          "java.net.URI"
        ]
      },
      {
        "name": "setProperties",
        "parameterTypes": [
          "java.util.Map"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "int"
        ]
      },
      {
        "name": "setStatus",
        "parameterTypes": [
          "org.springframework.http.HttpStatus"
        ]
      },
      {
        "name": "setTitle",
        "parameterTypes": [
          "java.lang.String"
        ]
      },
      {
        "name": "setType",
        "parameterTypes": [
          "java.net.URI"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.core.JdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.JdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.core.simple.JdbcClient",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.DataSourceTransactionManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory$EmbeddedDataSourceProxy",
    "condition": {
      "typeReachable": "org.springframework.jdbc.datasource.embedded.EmbeddedDatabaseFactory"
    },
    "methods": [
      {
        "name": "shutdown",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.jdbc.datasource.SimpleDriverDataSource",
    "allPublicConstructors": true
  },
  {
    "name": "org.springframework.scheduling.annotation.AbstractAsyncConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "org.springframework.beans.factory.ObjectProvider"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.ProxyAsyncConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "asyncAdvisor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "scheduledAnnotationProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.annotation.SchedulingConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.concurrent.SimpleAsyncTaskScheduler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "methods": [
      {
        "name": "close",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.scheduling.config.ScheduledTaskHolder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.scheduling.TaskScheduler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.method.MethodSecurityExpressionRoot",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionHandler",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionOperations",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.expression.SecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor",
    "allDeclaredFields": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.lang.String",
          "org.springframework.security.access.method.MethodSecurityMetadataSource",
          "java.lang.String"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.access.method.MethodSecurityMetadataSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.prepost.PreInvocationAuthorizationAdvice",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.access.SecurityMetadataSource",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AbstractAuthenticationToken",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AccountExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationEventPublisher",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationProvider",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.authentication.AuthenticationServiceException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.BadCredentialsException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.CredentialsExpiredException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.DefaultAuthenticationEventPublisher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.authentication.DisabledException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureBadCredentialsEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureCredentialsExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureDisabledEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureExpiredEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureLockedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProviderNotFoundEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureProxyUntrustedEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.event.AuthenticationFailureServiceExceptionEvent",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.LockedException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.authentication.ProviderNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "authenticationManagerBuilder",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "enableGlobalAuthenticationAutowiredConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeAuthenticationProviderBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "initializeUserDetailsBeanManagerConfigurer",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setGlobalAuthenticationConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.GlobalAuthenticationConfigurerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeAuthenticationProviderBeanManagerConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.authentication.ProviderManagerBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "objectPostProcessor",
        "parameterTypes": [
          "org.springframework.beans.factory.config.AutowireCapableBeanFactory"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "methodSecurityInterceptor",
        "parameterTypes": [
          "org.springframework.security.access.method.MethodSecurityMetadataSource"
        ]
      },
      {
        "name": "methodSecurityMetadataSource",
        "parameterTypes": [ ]
      },
      {
        "name": "preInvocationAuthorizationAdvice",
        "parameterTypes": [ ]
      },
      {
        "name": "setMethodSecurityExpressionHandler",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.ObjectPostProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.SecurityConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.builders.HttpSecurity",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.HttpSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "httpSecurity",
        "parameterTypes": [ ]
      },
      {
        "name": "setApplicationContext",
        "parameterTypes": [
          "org.springframework.context.ApplicationContext"
        ]
      },
      {
        "name": "setAuthenticationConfiguration",
        "parameterTypes": [
          "org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration"
        ]
      },
      {
        "name": "setContentNegotiationStrategy",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationStrategy"
        ]
      },
      {
        "name": "setObjectPostProcessor",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor"
        ]
      },
      {
        "name": "setSecurityContextHolderStrategy",
        "parameterTypes": [
          "org.springframework.security.core.context.SecurityContextHolderStrategy"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "requestDataValueProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "springSecurityHandlerMappingIntrospectorBeanDefinitionRegistryPostProcessor",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy",
    "allDeclaredConstructors": true,
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCacheFilterFactoryBean",
    "allDeclaredConstructors": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "fields": [
      {
        "name": "httpSecurity"
      },
      {
        "name": "objectObjectPostProcessor"
      }
    ],
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "conversionServicePostProcessor",
        "parameterTypes": [ ]
      },
      {
        "name": "delegatingApplicationListener",
        "parameterTypes": [ ]
      },
      {
        "name": "privilegeEvaluator",
        "parameterTypes": [ ]
      },
      {
        "name": "setFilterChainProxySecurityConfigurer",
        "parameterTypes": [
          "org.springframework.security.config.annotation.ObjectPostProcessor",
          "org.springframework.beans.factory.config.ConfigurableListableBeanFactory"
        ]
      },
      {
        "name": "setFilterChains",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "setWebSecurityCustomizers",
        "parameterTypes": [
          "java.util.List"
        ]
      },
      {
        "name": "springSecurityFilterChain",
        "parameterTypes": [ ]
      },
      {
        "name": "webSecurityExpressionHandler",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.security.config.annotation.web.HttpSecurityBuilder",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.context.DelegatingApplicationListener",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.core.context.SecurityContextImpl",
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UserDetailsService",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.core.userdetails.UsernameNotFoundException",
    "allDeclaredConstructors": true
  },
  {
    "name": "org.springframework.security.crypto.password.PasswordEncoder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AccessDeniedHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.AuthorizationManagerWebInvocationPrivilegeEvaluator$HttpServletRequestTransformer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.access.expression.WebSecurityExpressionRoot",
    "allDeclaredFields": true,
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.access.HandlerMappingIntrospectorRequestTransformer",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [
          "org.springframework.web.servlet.handler.HandlerMappingIntrospector"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.security.web.access.WebInvocationPrivilegeEvaluator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.AuthenticationFailureHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.AuthenticationSuccessHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.authentication.logout.LogoutSuccessHandler",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.AuthenticationEntryPoint",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.security.web.csrf.CsrfTokenRequestAttributeHandler$SupplierCsrfToken",
    "allDeclaredMethods": true
  },
  {
    "name": "org.springframework.security.web.SecurityFilterChain",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.Collection"
        ]
      },
      {
        "name": "transactionalEventListenerFactory",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.annotation.Isolation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.Propagation",
    "allDeclaredFields": true
  },
  {
    "name": "org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true,
    "queriedMethods": [
      {
        "name": "<init>",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionAdvisor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource",
          "org.springframework.transaction.interceptor.TransactionInterceptor"
        ]
      },
      {
        "name": "transactionAttributeSource",
        "parameterTypes": [ ]
      },
      {
        "name": "transactionInterceptor",
        "parameterTypes": [
          "org.springframework.transaction.interceptor.TransactionAttributeSource"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.transaction.ConfigurableTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.event.TransactionalEventListenerFactory",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionAttributeSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.interceptor.TransactionInterceptor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.PlatformTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.ResourceTransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionOperations",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.support.TransactionTemplate",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionDefinition",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.transaction.TransactionManager",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.util.comparator.NullSafeComparator",
    "methods": [
      {
        "name": "compare",
        "parameterTypes": [
          "java.lang.Object",
          "java.lang.Object"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.util.MimeType",
    "methods": [
      {
        "name": "getCharset",
        "parameterTypes": [ ]
      },
      {
        "name": "getParameters",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "getSubtypeSuffix",
        "parameterTypes": [ ]
      },
      {
        "name": "getType",
        "parameterTypes": [ ]
      },
      {
        "name": "isConcrete",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardSubtype",
        "parameterTypes": [ ]
      },
      {
        "name": "isWildcardType",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.util.PathMatcher",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.validation.Validator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.accept.ContentNegotiationStrategy",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.accept.MediaTypeFileExtensionResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.bind.annotation.RequestMethod",
    "allDeclaredFields": true,
    "allPublicConstructors": true,
    "allDeclaredConstructors": true,
    "allPublicMethods": true
  },
  {
    "name": "org.springframework.web.client.RestClient$Builder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.context.ConfigurableWebApplicationContext"
  },
  {
    "name": "org.springframework.web.context.ServletContextAware",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.cors.CorsConfigurationSource",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.CharacterEncodingFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.filter.RequestContextFilter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.CompositeUriComponentsContributor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.method.support.HandlerMethodArgumentResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.method.support.UriComponentsContributor",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.MultipartResolver",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.multipart.support.StandardServletMultipartResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.reactive.DispatcherHandler"
  },
  {
    "name": "org.springframework.web.reactive.function.client.WebClient$Builder",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.DelegatingWebMvcConfiguration",
    "queriedMethods": [
      {
        "name": "setConfigurers",
        "parameterTypes": [
          "java.util.List"
        ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurationSupport",
    "queriedMethods": [
      {
        "name": "beanNameHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "defaultServletHandlerMapping",
        "parameterTypes": [ ]
      },
      {
        "name": "handlerExceptionResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "handlerFunctionAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "httpRequestHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcHandlerMappingIntrospector",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPathMatcher",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcPatternParser",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcResourceUrlProvider",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcUriComponentsContributor",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"
        ]
      },
      {
        "name": "mvcUrlPathHelper",
        "parameterTypes": [ ]
      },
      {
        "name": "mvcViewResolver",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager"
        ]
      },
      {
        "name": "requestMappingHandlerAdapter",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.validation.Validator"
        ]
      },
      {
        "name": "requestMappingHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "resourceHandlerMapping",
        "parameterTypes": [
          "org.springframework.web.accept.ContentNegotiationManager",
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "routerFunctionMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "simpleControllerHandlerAdapter",
        "parameterTypes": [ ]
      },
      {
        "name": "viewControllerHandlerMapping",
        "parameterTypes": [
          "org.springframework.format.support.FormattingConversionService",
          "org.springframework.web.servlet.resource.ResourceUrlProvider"
        ]
      },
      {
        "name": "viewNameTranslator",
        "parameterTypes": [ ]
      }
    ]
  },
  {
    "name": "org.springframework.web.servlet.config.annotation.WebMvcConfigurer",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.DispatcherServlet",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.FlashMapManager",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.HandlerFunctionAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.function.support.RouterFunctionMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.HandlerMappingIntrospector",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.handler.MatchableHandlerMapping",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerAdapter",
    "queryAllPublicMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerExceptionResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.HandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.LocaleResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.RequestToViewNameTranslator",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.resource.ResourceUrlProvider",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.support.RequestDataValueProcessor",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ThemeResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.View",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.BeanNameViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.ContentNegotiatingViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.view.InternalResourceViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.servlet.ViewResolver",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.pattern.PathPatternParser",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.springframework.web.util.UrlPathHelper",
    "queryAllPublicMethods": true,
    "queryAllDeclaredMethods": true
  },
  {
    "name": "org.yaml.snakeyaml.Yaml",
    "condition": {
      "typeReachable": "org.springframework.boot.env.YamlPropertySourceLoader"
    }
  }
]
